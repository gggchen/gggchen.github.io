<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>G Chen on G Chen</title>
    <link>http://gggchen.github.io/</link>
    <description>Recent content in G Chen on G Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Chen</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2019 读书总结</title>
      <link>http://gggchen.github.io/post/books2019/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/books2019/</guid>
      <description>

&lt;h3 id=&#34;fluent-forever&#34;&gt;Fluent forever&lt;/h3&gt;

&lt;p&gt;不仅介绍了学语言的规律而且总结了如何学习.&lt;/p&gt;

&lt;p&gt;比如推荐了分辨语言中难易辨别音的方法, 之前我从来没有搞明白过德语的 e 和 i 有什么区别, 我尝试用他介绍的方法, 把这两个音放在 Anki 卡片里, 听音做选择, 并没有收获. 后来看又看了一些资料终于明白了.&lt;/p&gt;

&lt;p&gt;还介绍了怎么背单词, 当然是利用类似 Anki 的卡片间隔重复记忆, 关键是他总结了一套记单词的一套工作流程. 我真的服气了, 我本来想写个博客来介绍我的背单词流程, 和这本书一比起来就是 nothing, 他也早写好博客 并且做好视频教程了, 甚至还有配套的 Anki 的模板, 在 &lt;a href=&#34;https://blog.fluent-forever.com/gallery/&#34; target=&#34;_blank&#34;&gt;Download and install my model deck&lt;/a&gt; 中可以找到下载.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用 Eudic 等词典查单词意思以及音标&lt;/li&gt;
&lt;li&gt;利用 &lt;a href=&#34;https://forvo.com/&#34; target=&#34;_blank&#34;&gt;https://forvo.com/&lt;/a&gt; 下载单词发音&lt;/li&gt;
&lt;li&gt;谷歌搜索这个单词相关的图片, 因为大脑更容易记住图形&lt;/li&gt;
&lt;li&gt;然后在 Anki 里面背单词, 自动规律间断重复&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;另外一个收获是, 一张卡片最好只记忆一个东西.
单词有时有几个记忆点时, 我应该把单词分开背, 一次只背一项. 现在我背德语, 一张卡片记忆德语对应的含义, 第二张卡片记忆含义对应的德语, 第三张卡片记忆该德语名词的复数, 这样不会盯着一张卡片想完成三个动作, 然后崩溃, 再也不想背了. 我之前很多次痛苦的学习记忆就是一张卡片想背的东西太多.&lt;/p&gt;

&lt;h3 id=&#34;娱乐至死&#34;&gt;《娱乐至死》&lt;/h3&gt;

&lt;p&gt;这本书写了电视的出现对书本作为传播媒介的影响, 技术从来不是中立的, 技术和工具会束缚限制塑造我的思维&lt;/p&gt;

&lt;p&gt;电视出现对于政治讨论, 以前大家关心候选人的参政纲领和思想, 现在似乎更在于外形和电视辩论上的表现.
对于中国来说, 正如《不丧》节目里说的那样, 是乔治奥威尔《1984》和赫胥黎《美丽新世界》夹击下的社会.
中国首先有 1984 里那样的真理部, 政府通过控制舆论, 报纸, 电视和网络, 控制思想.
另一方面又在娱乐化, 电视节目认真讨论问题是很难的, 只有娱乐的方式才会有受众.&lt;/p&gt;

&lt;p&gt;读了这本书之后, 没有播客听的一段时间, 又听了李如一的《IT 公论》, 提到这本书, 说「读书不一定深刻, 视频也不一定肤浅」. 对我来说, 还是多读书, 同时也不用拒绝作为视频呈现的很多深刻内容.&lt;/p&gt;

&lt;h3 id=&#34;deep-work-rules-for-focused-success-in-a-distracted-world&#34;&gt;Deep Work : Rules for Focused Success in a Distracted World&lt;/h3&gt;

&lt;p&gt;算作 self-help 的另一本书, 本来以为又是这一类的, 我读过太多了, 后来看到作者说自己用了这套方法, 一年发十篇论文, 现在已经是教授了, 我就觉得还是要再读一遍的, 具体收获如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不使用社交网络, 不用担心遗漏重要的信息, 没必要为了社交网络的一点点好处就不停刷&lt;/li&gt;
&lt;li&gt;工作时间断网, 邮件意味着时刻被打扰, 可以定时查看, 比如一小时内检查一下, 也能保证45分钟是集中注意的&lt;/li&gt;
&lt;li&gt;提前把第二天的工作安排好, 精确到分钟, 就算被打破也不要气馁. 时刻想下一步干什么最好&lt;/li&gt;
&lt;li&gt;放松是有必要的, 玩玩为了更好地工作, 去 Hiking, 大自然里转转也是有必要的&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;贾想-i&#34;&gt;《贾想 I》&lt;/h3&gt;

&lt;p&gt;我想他还是很清楚的, 认为「谁来救救我们」是奴才的思维, 永远不要等别人来救, 自己救自己.&lt;/p&gt;

&lt;p&gt;读到很多年之前贾樟柯就听到消息说电影审查制度和分级制度, 朋友告诉他「电影的春天就要来了」
但是电影的春天到现在还没来.
2019 年《八佰》撤档了, 看《好莱坞往事》的时候顺便补了 &lt;em&gt;Django Unchained&lt;/em&gt;, 看到豆瓣 2012 年也在讨论删减版的电影和最后下映的问题, 我感觉悲观.&lt;/p&gt;

&lt;p&gt;出去玩遇到一个伊朗人, 还聊到张艺谋的《英雄》, 她说很喜欢这部电影. 我之前电影导演也只知道张艺谋, 2019 年也重新再看了《英雄》, 看到最后李连杰饰演的英雄杀了各国的刺杀者然后自杀来让天下太平的言论感觉有点不舒服, 有种为了统治者服务, 维稳为重, 不同政见者你们就闭嘴吧. 读了这本书才发现张艺谋那么不堪, 还向领导举报《小武》.&lt;/p&gt;

&lt;h3 id=&#34;何为良好生活&#34;&gt;《何为良好生活》&lt;/h3&gt;

&lt;p&gt;书中提到陀思妥耶夫斯基在西伯利亚流放, 先是在寒风中被强制挖坑, 然后再被强制把坑填上.
我有时感觉我正在干的活就是这样无意义,
生活就是这样无意义, 但还是要相信推石头上山就是意义.&lt;/p&gt;

&lt;p&gt;其他部分读起来索然无味, 虽然也提到了《自私的基因》, 我以为作者会深入论述一下的, 结果并没有.
区分了简单的快乐和良好生活, 就像吸毒的致幻效果虽然能够带来直接的快乐, 但是相伴的成瘾并不是良好生活的追求.&lt;/p&gt;

&lt;h3 id=&#34;中央帝国的财政密码&#34;&gt;《中央帝国的财政密码》&lt;/h3&gt;

&lt;p&gt;之前在 B 站看王老菊玩经营类的游戏, 管理一个监狱, 派狱长滥杀犯人, 以保持监狱账面稳定. 读这本书的感受和看游戏录屏类似, 国家机器为了财政收入, 并不比王老菊的玩法高明太多.&lt;/p&gt;

&lt;h3 id=&#34;村上春树&#34;&gt;《村上春树》&lt;/h3&gt;

&lt;p&gt;读了《当我谈跑步时我谈些什么》之后尝试沿着附近的公园跑步, 也并没有坚持下来, 尝试听音乐, 也没找到乐趣. 时下流行跑马拉松和听黑胶, 好奇是不是村上春树开的头.&lt;/p&gt;

&lt;p&gt;读了他的其他几篇专栏集, 能感觉到诚实:
《我的职业是小说家》,《大萝卜和难挑的鳄梨》,
《假如真有时光机》和《无比芜杂的心绪》.&lt;/p&gt;

&lt;p&gt;《无比芜杂的心绪》里写到高墙和鸡蛋站边的话, 他永远站在鸡蛋那边, 他去以色列另一个文学奖, 还要讲一番话批评以色列, 还是有勇气的.&lt;/p&gt;

&lt;h2 id=&#34;历史&#34;&gt;历史&lt;/h2&gt;

&lt;p&gt;因为在欧洲生活, 路过景点经常不知道什么意思, 补了补德国和欧洲历史.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;《德国: 一个国家的记忆》: 用大英博物馆的藏品为线索介绍了德国历史. 德国作为一个想象共同体的诞生, 马丁路德翻译的德语圣经统一了书面德语, 歌德, 巴赫这些人物为精神上优秀德国先贤; 曾经的德国疆域比现在大, Kaliningrad 曾经是普鲁士的老家, 布拉格曾经有最好的德语大学, 二战后这些地区都不再是德语区, 德国人失去了1/4的领土, 很多人作为难民回到德国&lt;/li&gt;
&lt;li&gt;《20世纪简史: 从无线电到柏林墙》:很粗略又全面地带过了很多历史, 很多细节没涉及也没有篇幅涉及&lt;/li&gt;
&lt;li&gt;《你一定爱读的极简欧洲史》: 知道了德国和英国都是日耳曼语系的, 英国的三次被入侵, 分别就是安格鲁 萨克森人, 诺曼人和Vikings的入侵, 而萨克森正是我生活的本地.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;科普&#34;&gt;科普&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;《皮肤的秘密》:　关于护肤的科普, 明白我的皮肤是过度护理了, 而且油性皮肤根本也不需要保湿&lt;/li&gt;
&lt;li&gt;《茶杯里的风暴》: 挺有趣, 把自己专业和生活联系起来了, 明白了大海为什么是蓝色的, 因为红光的折射率不高, 蓝光能转一圈出来&lt;/li&gt;
&lt;li&gt;《一个天文学家的夜空漫游指南》: 挺无聊的, 很多知识我都知道了, 另外一些抒情我不感兴趣&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;摄影&#34;&gt;摄影&lt;/h2&gt;

&lt;p&gt;之前看到&lt;a href=&#34;https://sspai.com/post/57294&#34; target=&#34;_blank&#34;&gt;少数派微单购买指南&lt;/a&gt;里推荐了这本书《一本摄影术》, 就找来读了.
终于明白了景深是什么概念, 明白了自动对焦有 One Shot 和 AI Focus, 有什么区别. 其他一些章节比如影楼摄影, 对我来说有些多余.&lt;/p&gt;

&lt;p&gt;读了薇薇安·迈尔的两本书: &lt;em&gt;Vivian Maier : Street Photographer&lt;/em&gt; 和 &lt;em&gt;Vivian Maier: A Photographer Found&lt;/em&gt;.
看到她总是对着镜子自拍, 我也自拍了几次, 完全不是那个样子, 再重新翻了一遍她的照片, 发现她的照片都很有趣, 不是我拍的糖水片能比的. 街头摄影我也不想把摄像头怼在别人脸上, 之前读了《论摄影》就对相机的侵略性印象深刻, 估计相机就要落灰了.&lt;/p&gt;

&lt;p&gt;看她自拍总是把相机端在胸口, 眼睛也不在取景器上, 疑惑她怎么对焦的呢?
后来看了第二本书明白她用的 Rolleiflex 是向下看取景的, 就是端在胸口对焦.&lt;/p&gt;

&lt;h2 id=&#34;fiction&#34;&gt;Fiction&lt;/h2&gt;

&lt;h3 id=&#34;冬泳&#34;&gt;《冬泳》&lt;/h3&gt;

&lt;p&gt;《冬泳》比起双雪涛的《猎人》还是好看一些, 虽然双雪涛也写过很好的《飞行家》和《平原上的摩西》.
《猎人》里总是双层结构, 一个小说家的故事和他写的故事同时展开, 这些双层的故事都没有班宇的冬泳里最后一个故事精彩&lt;/p&gt;

&lt;h3 id=&#34;南美文学&#34;&gt;南美文学&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;《地球上最后的夜晚》: 父子一块出去玩找妓女真是让我惊讶&lt;/li&gt;
&lt;li&gt;《爱情和其他魔鬼》: 希望神父勇敢一点, 不按常理解决问题&lt;/li&gt;
&lt;li&gt;《没有人给他写信的上校》: 有个制作小金鱼的手艺多么必要, 这样在没有养老金的时候还能生活下来&lt;/li&gt;
&lt;li&gt;《马尔克斯：最后的访谈》: 发现卡斯特罗和马尔克斯竟然是好朋友&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;哈利波特系列&#34;&gt;哈利波特系列&lt;/h3&gt;

&lt;p&gt;补完了这个系列. 三个兄弟特别像火影两兄弟的故事, 伏地魔需要哈利波特身体重生, 像极了大蛇丸需要佐助的身体, 赫敏, 罗恩和哈利像春野樱, 佐助和鸣人.
如果哈利和罗恩同时喜欢上了赫敏, 那么估计最后结局也不会这么好了.&lt;/p&gt;

&lt;h3 id=&#34;有匪&#34;&gt;《有匪》&lt;/h3&gt;

&lt;p&gt;当时是想找个武侠小说读, 在分类里找到这本小说, 觉得还不错, 读惯了少年为主角的历险故事, 少女为主角的故事对我很清新, 而且不会有种马的俗套.
从最开始走出山寨最后成为别人口中的传说, 破风刀能斩断一切, 看着很过瘾, 配角的描写也很出彩.&lt;/p&gt;

&lt;h3 id=&#34;82年生的金智英&#34;&gt;《82年生的金智英》&lt;/h3&gt;

&lt;p&gt;父权社会中女性的遭受的不公, 想起某种艰难模式的马里奥游戏，一万种死法. 从出生开始, 爸妈就为出生的不是男孩而不开心, 从小做家务, 而弟弟是不用做家务的. 上学有老师的不公正对待, 就业找工作难, 工作后职场性骚扰, 结婚后生孩子要丢掉辛苦找到的工作, 而每天干家务和带孩子却还要忍受别人的白眼: 不工作的家庭主妇只会享受.&lt;/p&gt;

&lt;p&gt;每次状况的改变都是有女生勇敢反抗. 第一次是女生总是在食堂后吃到饭, 有女生出头提议女生先排队领饭, 后来是学校校规总是对女生着装严格要求, 也在一个大姐头出面情况下, 校服对女生不再那么严格了。&lt;/p&gt;

&lt;p&gt;题图 by Alfons Morales on &lt;a href=&#34;https://unsplash.com/photos/YLSwjSy7stw&#34; target=&#34;_blank&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我的 MacOS 应用</title>
      <link>http://gggchen.github.io/post/macos-application/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/macos-application/</guid>
      <description>

&lt;h2 id=&#34;编辑器&#34;&gt;编辑器&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34; target=&#34;_blank&#34;&gt;Emacs&lt;/a&gt;: 免费, 最常用的编辑器了, 用 &lt;code&gt;org-mode&lt;/code&gt; 记笔记, &lt;code&gt;ess&lt;/code&gt; 运行 R 语言, 爱不释手. 虽然配置和学习麻烦了些, 用了好多年了, 但是每次想改动什么的时候, 还是发现自己是个新手.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sublimetext.com/&#34; target=&#34;_blank&#34;&gt;sublime&lt;/a&gt;: 付费, 最常用的功能是&lt;a href=&#34;https://www.youtube.com/watch?v=YgEuzl9nnbc&#34; target=&#34;_blank&#34;&gt;多行同时编辑&lt;/a&gt;并且合并.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://macdown.uranusjr.com/&#34; target=&#34;_blank&#34;&gt;MacDown&lt;/a&gt;: 免费, Markdown 编辑器, 虽然 Emacs 也可以编辑 Markdown, 有时候还是想所见即所得&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;menu-bar-常驻&#34;&gt;Menu bar 常驻&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hammerspoon.org/&#34; target=&#34;_blank&#34;&gt;Hammerspoon&lt;/a&gt;: 免费, 功能丰富, 我用来快速启动应用和管理窗口大小. 比如使用 左边的 &lt;code&gt;option&lt;/code&gt; 键作为 meta 键, &lt;code&gt;option + m&lt;/code&gt; 快速启动 &lt;code&gt;emacs&lt;/code&gt;. 缩放窗口定义为 &lt;code&gt;option + f&lt;/code&gt; 当前活跃窗口到最大. 可以参考我的配置文件 &lt;a href=&#34;https://gist.github.com/gggchen/ad4aff91a5d0d941364aad860ac50f65&#34; target=&#34;_blank&#34;&gt;.hammerspoon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pqrs.org/osx/karabiner/&#34; target=&#34;_blank&#34;&gt;Karabiner-Elements&lt;/a&gt;: 免费, 改键工具, 上一次 MacOS 升级到 macOS High Sierra 之后, Karabiner 不能兼容, 我这才发现这个软件对我多么重要, 只好回退了 MacOS 的版本. 作为一个 Emacs 用户, 我经常需要用到 Control 键. Karabiner-Elements 帮我把右边的 return 键, 改成当和其他键一起按动时候, 就成了 control 键. 不敢想象没有这个改键工具的 MacOS 体验.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rime.im/&#34; target=&#34;_blank&#34;&gt;鼠须管&lt;/a&gt;: 免费, 虽然配置很麻烦, 还是趁手的, 中英文切换用 shift 很顺手&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dropbox.com&#34; target=&#34;_blank&#34;&gt;Dropbox&lt;/a&gt;: 付费, 同步数据&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alfredapp.com/&#34; target=&#34;_blank&#34;&gt;Alfred&lt;/a&gt;: 付费, 购买了 lifetime license, 应用启动器, 文件搜索器, 拼写检查器, 剪贴板管理器, 还用这个应用来强制杀死其他应用.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;书影音&#34;&gt;书影音&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.marginnote.com/&#34; target=&#34;_blank&#34;&gt;MarginNote&lt;/a&gt;: 付费, 有教育优惠, 读 pdf 教材的时候, 可以列出来本书结构, 并且在树状结构上做笔记, 很方便.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fbreader.org/&#34; target=&#34;_blank&#34;&gt;FBReader&lt;/a&gt;: 免费, 方便打开比如 &lt;code&gt;awz&lt;/code&gt;, &lt;code&gt;epub&lt;/code&gt; 和 &lt;code&gt;mobi&lt;/code&gt; 格式的书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://iina.io/&#34; target=&#34;_blank&#34;&gt;IINA&lt;/a&gt;: 免费, 方便打开视频和音乐文件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;语言学习&#34;&gt;语言学习&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eudic.net/v4/en/app/eudic&#34; target=&#34;_blank&#34;&gt;欧陆词典&lt;/a&gt;: 付费, 查单词方便一些, 自己导入词库之后, 可以查同义词, 英语解释, 例句, 可以参考&lt;a href=&#34;https://www.douban.com/note/278501822/&#34; target=&#34;_blank&#34;&gt;奶爸1.6G Mdict词库的补充及在Bluedict中使用的心得&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.ankiweb.net/&#34; target=&#34;_blank&#34;&gt;Anki&lt;/a&gt;: 免费, 背单词软件. 背单词一般在手机上背, 编辑单词卡片一般在电脑上完成, 需要查单词音频, 连系图片, 具体操作流程可以读书&lt;a href=&#34;https://www.goodreads.com/book/show/19661852-fluent-forever&#34; target=&#34;_blank&#34;&gt;Fluent Forever&lt;/a&gt; 或者看网页&lt;a href=&#34;https://blog.fluent-forever.com/chapter2/&#34; target=&#34;_blank&#34;&gt;Using Anki Online: Chapter 2&lt;/a&gt; 和 &lt;a href=&#34;https://blog.fluent-forever.com/tag/anki/&#34; target=&#34;_blank&#34;&gt;Fluent forever Anki&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;信息源和笔记&#34;&gt;信息源和笔记&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://reederapp.com/&#34; target=&#34;_blank&#34;&gt;Reeder&lt;/a&gt;: 付费, RSS 阅读器, 新闻和博客文章信息源, 虽然现在软件升级到 4 了, 我还在用着版本 3, 感觉已经够好用了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://evernote.com/&#34; target=&#34;_blank&#34;&gt;Evernote&lt;/a&gt;: 免费, 我付费了高级功能, 在&lt;a href=&#34;https://www.gchen.me/post/read-it-later/&#34; target=&#34;_blank&#34;&gt;稍后读并且存档&lt;/a&gt; 文章里提到过, 因为需要把文章通过邮件收藏到 evernote, 必须解锁高级功能.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://app.getpocket.com/&#34; target=&#34;_blank&#34;&gt;Pocket&lt;/a&gt;: 免费, 稍后读, 把 Reeder 中的文章, 暂时没时间读的, 加入稍后读&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;chrome-插件&#34;&gt;Chrome 插件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vimium: 在网页上使用 vim 键位, 常用翻页, 到页头, 页尾&lt;/li&gt;
&lt;li&gt;AdGuard: 屏蔽广告&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc&#34; target=&#34;_blank&#34;&gt;Evernote Web Clipper&lt;/a&gt;: 剪切收藏网页&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj&#34; target=&#34;_blank&#34;&gt;Save to Pocket&lt;/a&gt;: 把文章保存到 Pocket&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.omnigroup.com/more/&#34; target=&#34;_blank&#34;&gt;OmniDisksweeper&lt;/a&gt;: 免费, 磁盘清理工具. 经常发现电脑硬盘又快满了, 但是又不知道到底哪些文件占据了大量空间. Mac OS 自带大文件检测功能, 但是问题是系统自带功能有限, 很多时候, 我都发现硬盘系统的文件占了太多空间, 而系统文件是不在大文件检测功能扫描范围内的. 这时候就需要 OmniDisksweeper 了, 扫描系统文件需要一些时间, 但是之后删除就方便多了&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://macpassapp.org/&#34; target=&#34;_blank&#34;&gt;Macpass&lt;/a&gt;: 免费, 密码管理软件, 虽然 MacOS 有 Keychain 这个软件可以管理密码, 但是毕竟信不过把所有密码交给苹果公司.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iterm2.com/&#34; target=&#34;_blank&#34;&gt;iTerm2&lt;/a&gt;: 免费, 最好用的 terminal emulator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ocenaudio.com/&#34; target=&#34;_blank&#34;&gt;ocenaudio&lt;/a&gt;: 免费, 音频处理软件, 有时候需要把一段音频裁剪一小段放入 Anki, 背单词时候跟读, 这个软件完全能够满足我的需求.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;header Photo by &lt;a href=&#34;https://unsplash.com/photos/rsQZm3wNu0I&#34; target=&#34;_blank&#34;&gt;Fabian Grohs on Unsplash&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use Emacs as R IDE</title>
      <link>http://gggchen.github.io/post/emacs_as_r_ide/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/emacs_as_r_ide/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;如果机器能让我省一秒钟，我愿意用两天去寻找它&lt;/p&gt;

&lt;p&gt;祝佳音, 科技作者，触乐创始人&lt;a href=&#34;https://liqi.io/zhujiayin/&#34; target=&#34;_blank&#34;&gt;https://liqi.io/zhujiayin/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;R 的环境选择很多, 有人使用原生的 R, 更多人用的 RStudio, 甚至 Eclisp, Vim 也有结合 R 使用的插件. 工具有时候并不重要, 比如本人导师, 在用 Basic R, 但是并不影响他 R 水平比我不知道高到哪里去了.
但是我在使用 Emcas 的过程中还是体会到很多方便, 我也习惯了不使用鼠标,
RStudio 每次切换 tab 都让我苦找, 尤其是打开的 tab 极其多的时候, 而且 IDE 打开还是太重, 不如编辑器灵活.
当然 Emacs 也有缺点, 比如配置麻烦, 但是配置的问题可以通过使用一些新手友好的 start kit 解决, 比如 Spacemacs.
虽然新手友好了, 但是本文仍然是面向不怕麻烦的人, 的确会让写代码快捷很多, 但是在此之前需要解决各种出其不意, 也要能折腾.
即使配置麻烦, 现在每天我还没完全配置好我的 Emacs, 但是我仍然愿意一直用它. 因为如果一个工具能让我每天节省一秒, 我也愿意花一个月来学习它.&lt;/p&gt;

&lt;h1 id=&#34;environment-setup&#34;&gt;Environment setup&lt;/h1&gt;

&lt;p&gt;我想 Linux 或者 BSD 用户不需要讲太多, 直接 Google 安装就完事了, 但是 Mac OS 和 Windows 操作系统的用户还是需要告知怎样安装环境.
R 是统计编程语言环境, Emacs 是一个编辑器, 可以理解为给原生的 R 搭配了一个绚烂的皮肤; Spacemacs 是面向新手的配置, 因为原生的 Emacs 配置起来太麻烦了, 新手可以更好地用 Emacs, 如果一段时间后不满意可以再重新自己配置.&lt;/p&gt;

&lt;h2 id=&#34;r&#34;&gt;R&lt;/h2&gt;

&lt;p&gt;官方网站在 &lt;a href=&#34;https://www.r-project.org/&#34; target=&#34;_blank&#34;&gt;https://www.r-project.org/&lt;/a&gt;, 官网上说得很明白了, 直接下载或者寻找比较近的镜像(mirror)安装就好. 比如这是 R 的清华大学的镜像链接: &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/CRAN/bin/windows/&#34; target=&#34;_blank&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/CRAN/bin/windows/&lt;/a&gt;
下载完了, 一路 下一步(Next) 安装就完事了.&lt;/p&gt;

&lt;h2 id=&#34;install-emacs&#34;&gt;Install Emacs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34; target=&#34;_blank&#34;&gt;https://www.gnu.org/software/emacs/&lt;/a&gt; 官网上可以选择 Linux, Windows 和 MacOS 的各自安装方式.&lt;/p&gt;

&lt;h2 id=&#34;install-spacemacs&#34;&gt;Install spacemacs&lt;/h2&gt;

&lt;p&gt;Emacs 因为配置繁琐并且上手不容易, 推荐使用别人配置好的 &lt;a href=&#34;https://www.emacswiki.org/emacs/StarterKits&#34; target=&#34;_blank&#34;&gt;starter kit&lt;/a&gt;, 帮你写好好不冲突的配置文件, 只需要下载使用即可. 可选的方案有很多, 比如流行的 &lt;a href=&#34;https://github.com/bbatsov/prelude&#34; target=&#34;_blank&#34;&gt;prelude&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/hlissner/doom-emacs&#34; target=&#34;_blank&#34;&gt;doom-emacs&lt;/a&gt;, 这里我推荐 &lt;a href=&#34;http://spacemacs.org/&#34; target=&#34;_blank&#34;&gt;spacemacs&lt;/a&gt;, 因为足够简单.&lt;/p&gt;

&lt;p&gt;spacemacs 的安装方法可以参考官网介绍, 这里描述我的备选方法, 可以点击主页上的下载按钮, 下载压缩包, 解压, 并且移动压缩包到&lt;code&gt;~/.emacs.d&lt;/code&gt;. 可以打开 terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd Download/
mv spacemacs-master/* ~/.emacs.d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来就可以打开 Emacs 了, 第一次打开会弹出几个选项, 这里就选择默认选项按回车键到最后.
接下来 spacemacs 会安装一些包, 需要等待一段时间包安装完毕.&lt;/p&gt;

&lt;h3 id=&#34;配置-spacemacs-optional&#34;&gt;配置 spacemacs(optional)&lt;/h3&gt;

&lt;p&gt;虽然 spacemacs 已经将 Emacs 配置得差不多了, 但是还是有些地方最好修改配置文件配置的, 比如字体字号, 打开最大化窗口和背景透明.&lt;/p&gt;

&lt;p&gt;打开配置文件为, 使用快捷键 &lt;code&gt;SPC e d&lt;/code&gt; 打开 &lt;code&gt;~/.spacemacs&lt;/code&gt;, 其中 &lt;code&gt;SPC&lt;/code&gt; 为空格键.
接下来修改配置文件.&lt;/p&gt;

&lt;h4 id=&#34;字体字号&#34;&gt;字体字号&lt;/h4&gt;

&lt;p&gt;搜索 &lt;code&gt;font&lt;/code&gt; 关键字: 在键盘上敲出 &lt;code&gt;/font&lt;/code&gt;, 回车搜索结果, 然后修改字体, 字号等关键词, 这里也可以把 &lt;code&gt;Monaco&lt;/code&gt; 替换成你喜欢的其他字体:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dotspacemacs-default-font &#39;(&amp;quot;Monaco&amp;quot;
                               :size 18
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;窗口最大化&#34;&gt;窗口最大化&lt;/h4&gt;

&lt;p&gt;找到 &lt;code&gt;dotspacemacs-maximized-at-startup&lt;/code&gt;, 并且把值 &lt;code&gt;nil&lt;/code&gt; 改成 &lt;code&gt;t&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;   ;; If non nil the frame is maximized when Emacs starts up.
   ;; Takes effect only if `dotspacemacs-fullscreen-at-startup&#39; is nil.
   ;; (default nil) (Emacs 24.4+ only)
   dotspacemacs-maximized-at-startup t
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;背景透明&#34;&gt;背景透明&lt;/h4&gt;

&lt;p&gt;这里修改两处, 首先将 &lt;code&gt;dotspacemacs-active-transparency&lt;/code&gt; 后的值改小一些, 比如说 &lt;code&gt;85&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it&#39;s active or selected.
   ;; Transparency can be toggled through `toggle-transparency&#39;. (default 90)
   dotspacemacs-active-transparency 85
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后还需要在 &lt;code&gt;user-config ()&lt;/code&gt; 后加入一行开启透明&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-eslip&#34;&gt;(defun dotspacemacs/user-config ()
  &amp;quot;Configuration function for user code.
This function is called at the very end of Spacemacs initialization after
layers configuration.
This is the place where most of your configurations should be done. Unless it is
explicitly specified that a variable should be set before a package is loaded,
you should place your code here.&amp;quot;
  (spacemacs/toggle-transparency)
  )

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ess&#34;&gt;ESS&lt;/h3&gt;

&lt;p&gt;想要在 Emacs 中使用 R 语言还需要支持工具 Emacs Speaks Statistic(ESS). 只需要在&lt;code&gt;layer&lt;/code&gt; 中加入一行 &lt;code&gt;ess&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-eslip&#34;&gt;dotspacemacs-configuration-layers
   &#39;(
     ;; ----------------------------------------------------------------
     ;; Example of useful layers you may want to use right away.
     ;; Uncomment some layer names and press &amp;lt;SPC f e R&amp;gt; (Vim style) or
     ;; &amp;lt;M-m f e R&amp;gt; (Emacs style) to install them.
     ;; ----------------------------------------------------------------
     helm
     ess
     )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://gggchen.github.io/img/Emacs_R.png&#34; alt=&#34;Emacs as R IDE screenshot&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;three-methods-to-use-r-in-emacs&#34;&gt;Three methods to use R in Emacs&lt;/h1&gt;

&lt;h2 id=&#34;r-repl&#34;&gt;R REPL&lt;/h2&gt;

&lt;p&gt;Read–eval–print loop(REPL) is a interactive shell for a language. For R language, it is the same as basic R.&lt;/p&gt;

&lt;p&gt;You can use &lt;code&gt;SPC SPC R return&lt;/code&gt; or &lt;code&gt;M-x R return&lt;/code&gt; to start a new R session.&lt;/p&gt;

&lt;h2 id=&#34;r-scripts&#34;&gt;R scripts&lt;/h2&gt;

&lt;p&gt;By using R scripts, you can edit and save your R command history.
   After creating a R file, &lt;code&gt;C-return&lt;/code&gt; to run a line. You can also selected then run a block of R code.&lt;/p&gt;

&lt;h2 id=&#34;literature-programming-in-org-mode&#34;&gt;Literature programming in org mode&lt;/h2&gt;

&lt;p&gt;Literature programming enable one to write codes in essay. One advantage of such paradigm is that more comments than code can be written.
Logic of codes can be explained before programming.
It is also easier to reread codes after a few weeks or for other people. By typing &lt;code&gt;&amp;lt;s TAB&lt;/code&gt;, code environment is created automatically. &lt;code&gt;C-c C-c&lt;/code&gt; to run current code block.&lt;/p&gt;

&lt;p&gt;If you are used to Rmarkdown, org-mode can also export result to PDF and HTML. By &lt;code&gt;C-c C-e&lt;/code&gt;, you can choose format of export file.&lt;/p&gt;

&lt;p&gt;Not good for trail. If you want to try parameters of one method using R, org mode is not a good choice. But it will fit if you have created a script R files and want to write an essay about your research process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我的 Podcast 节目收听列表</title>
      <link>http://gggchen.github.io/post/podcast/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/podcast/</guid>
      <description>

&lt;p&gt;我收听的 Podcast 列表不完全归纳, 按照「想到哪写到哪」排序. 有次见到同学的播客应用的截屏, 和我收听的节目重合很高, 也许中文节目就那么些吧, 因此觉得收听播客关注列表大同小异. 目前使用 Overcast 和苹果自带的博客客户端收听博客, 苹果自带的客户端有收听该节目的人也收听节目推荐, 也是发现新节目的很好途径.&lt;/p&gt;

&lt;h2 id=&#34;aspirin-fm-https-aspirinfm-fireside-fm&#34;&gt;&lt;a href=&#34;https://aspirinfm.fireside.fm/&#34; target=&#34;_blank&#34;&gt;Aspirin FM&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;三个互相了解的好朋友聊天, 互相开一些玩笑. 有主题但是经常跑题但并不是缺点. 听起来很放松, 如果更新了经常把这个播客最早播放, 因为欢快又轻松. 曾经有几期讲了 A 君和 D 小姐的爱情故事, 让我大开眼界.&lt;/p&gt;

&lt;h2 id=&#34;blow-your-mind-https-www-lizhi-fm-user-924&#34;&gt;&lt;a href=&#34;https://www.lizhi.fm/user/924&#34; target=&#34;_blank&#34;&gt;Blow your mind&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;简里里和峰哥这对伴侣太让人羡慕, 听两个人聊天很有启发性. 印象深刻的有之前的峰哥讲故事, 峰哥小本本和最近简里里的女性系列. 峰哥用数学角度解释问题, 很对我胃口又耳目一新, 简里里用心理学来解释问题, 很治愈我的心理焦虑和不安.&lt;/p&gt;

&lt;h2 id=&#34;迟早更新-http-www-weareones-com-podcast&#34;&gt;&lt;a href=&#34;http://www.weareones.com/podcast&#34; target=&#34;_blank&#34;&gt;迟早更新&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;有书评, 游记, 博物馆参观体验还有个人小感悟等, 如果我要做一个播客, 这就是我想要做的播客啊. 过年的时候会有迟早过年系列, 从这个节目得到很多好书推荐, 比如枪枪推荐的&lt;a href=&#34;https://book.douban.com/subject/26854318/&#34; target=&#34;_blank&#34;&gt;《现代艺术150年》&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;内核恐慌-https-kernelpanic-fm&#34;&gt;&lt;a href=&#34;https://kernelpanic.fm/&#34; target=&#34;_blank&#34;&gt;内核恐慌&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;一听再听反复收听的博客, 之前有一期两个人在&lt;a href=&#34;https://kernelpanic.fm/4&#34; target=&#34;_blank&#34;&gt;编辑器巡礼&lt;/a&gt;中聊了 Vim 键位原理, 两种 mode 的编辑模式, 后来我再学 Vim 才上手无障碍. 后来一年才更新一期, 只好把历史节目拿出来反复收听.&lt;/p&gt;

&lt;h2 id=&#34;字谈字畅-https-thetype-com-typechat&#34;&gt;&lt;a href=&#34;https://thetype.com/typechat/&#34; target=&#34;_blank&#34;&gt;字谈字畅&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;讲了很多字体排印设计相关的话题, 培养了我一些字体美感的认识, 让我自己也买了平头笔, 试着自己练一练英语的书法. 后来我非参数统计学到了样条(Spline), 很惊奇地发现计算机字母形状的保存是靠样条来做的.&lt;/p&gt;

&lt;h2 id=&#34;社会人科技评论-http-techreview-social&#34;&gt;&lt;a href=&#34;http://techreview.social/&#34; target=&#34;_blank&#34;&gt;社会人科技评论&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;讨论的很多话题都很感兴趣, 比如无人机和人工智能. 节目还讨论过知乎上的曹学和勃学, 如果不是这个节目, 还是接触不到知乎上挺有意思的内容, 感谢这档节目&lt;/p&gt;

&lt;p&gt;其他一些推荐语简短一些, 但是同样有趣的播客:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://bowuzhi.fm/&#34; target=&#34;_blank&#34;&gt;博物志&lt;/a&gt; 博物馆相关. &lt;a href=&#34;https://bowuzhi.fm/podcast/115&#34; target=&#34;_blank&#34;&gt;钵钵鸡不是鸡&lt;/a&gt;那一期推荐了成都的美食, 刚好我当时在成都, 快毕业了, 又补完了荞面和成都博物馆文殊院. 最近也加入了博物志的会员.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://emacscast.org/&#34; target=&#34;_blank&#34;&gt;玩世&lt;/a&gt; 出国读书的经历真实又有趣, 当小说读了, 一会聊故事, 一会儿聊起了物理学的理解, 夹杂之前在国内的回忆, 偶尔还唱起来.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://storyfm.cn/&#34; target=&#34;_blank&#34;&gt;故事FM&lt;/a&gt; 听到了很多故事, 很多人不一样的人生.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crazy.capital/&#34; target=&#34;_blank&#34;&gt;疯投圈&lt;/a&gt; 听两个主播从商业、科技和投资的角度看问题挺有意思的.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pretro.xyz/&#34; target=&#34;_blank&#34;&gt;提前怀旧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lizhi.fm/user/2579240391643675180&#34; target=&#34;_blank&#34;&gt;得意忘形播客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://renjianzhinan.fm/&#34; target=&#34;_blank&#34;&gt;人间指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;延边物语&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://emacscast.org/&#34; target=&#34;_blank&#34;&gt;EmacsCast&lt;/a&gt; 英文播客, 讲自己使用 Emacs 的体验.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yitianshijie.net/&#34; target=&#34;_blank&#34;&gt;一天世界&lt;/a&gt; 估计大部分人都收听了吧.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://player.fm/series/series-1464342&#34; target=&#34;_blank&#34;&gt;笙考数理化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;胡先笙文史札记&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://podcasts.apple.com/us/podcast/%E5%8A%A0%E5%B7%9E101/id992337597&#34; target=&#34;_blank&#34;&gt;加州101&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hardimage.pro/&#34; target=&#34;_blank&#34;&gt;硬影像&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考:
&lt;a href=&#34;https://sspai.com/post/52250&#34; target=&#34;_blank&#34;&gt;二零一八年，我的年度十大音频内容&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://typlog.com/podlist/&#34; target=&#34;_blank&#34;&gt;中文独立播客&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shadowsocks 与 科学上网</title>
      <link>http://gggchen.github.io/post/climb-wall/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/climb-wall/</guid>
      <description>

&lt;p&gt;为什么要翻墙。我当初翻墙只是因为想用 Google 和看 porn。就像播客&lt;a href=&#34;https://www.nicktalk.com/podcasts/2017/5/28/ntp-38-&#34; target=&#34;_blank&#34;&gt;NTP #38 科學上網指南&lt;/a&gt;里讲的那样，翻墙能让你获得完整的互联网体验，而不是阉割版本的。顺便一提，这个播客基本涵盖了科学上网的各个方面，推荐收听。&lt;/p&gt;

&lt;p&gt;翻墙方法有很多，比如 VPN 和 shadowsocks。我不选择 VPN 主要因为 VPN 只能全局代理。也就是访问国外网站也是利用国外服务器访问，高延迟会让体验很不舒服。而shadowsocks 可以设置使用代理的网址列表。在列表内的使用代理翻墙，国内网站不用 shadowsocks 直接访问，速度会快得多。&lt;/p&gt;

&lt;h1 id=&#34;如何搭建-shadowsocks&#34;&gt;如何搭建 shadowsocks&lt;/h1&gt;

&lt;p&gt;翻墙的基本思路为，既然国内的电脑无法访问国外网站如 Twitter，那就让国内电脑通过国外一台电脑为代理，访问国外网站 Twitter 再把这部分信息传递回国内电脑。所以需要国外一台电脑Virtual Private Server(VPS) 用来做代理访问国外网站，shadowsocks 为连接本地电脑和国外电脑的工具，需要安装在本地和国外电脑上，用来联通本地和国外。&lt;/p&gt;

&lt;h2 id=&#34;建立-vps&#34;&gt;建立 VPS&lt;/h2&gt;

&lt;p&gt;VPS 可选的服务提供商有很多。我自己因为 &lt;a href=&#34;https://education.github.com/pack&#34; target=&#34;_blank&#34;&gt;Github 学生计划的优惠&lt;/a&gt;最开始使用了 &lt;a href=&#34;https://www.digitalocean.com/&#34; target=&#34;_blank&#34;&gt;Digital Ocean&lt;/a&gt; 后来就一直路径依赖使用下来了。
Digital Ocean 也提供了丰富的文档来介绍如何使用自家的产品，比如&lt;a href=&#34;https://www.digitalocean.com/docs/droplets/how-to/create/&#34; target=&#34;_blank&#34;&gt;如何创建一个服务器&lt;/a&gt;，一般最便宜的方案 5 美元每月已经够用了，DO 还提供了测速工具来选择哪个地区的服务器能更快连接。
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04&#34; target=&#34;_blank&#34;&gt;服务器的初始设置&lt;/a&gt; 以 Ubuntu 为例介绍了刚建立的服务器如何设置防火墙等让自己更安全。&lt;/p&gt;

&lt;p&gt;其他 VPS 服务商还有比如 &lt;a href=&#34;https://www.vultr.com/&#34; target=&#34;_blank&#34;&gt;vultr&lt;/a&gt; 和 &lt;a href=&#34;https://cloud.google.com/&#34; target=&#34;_blank&#34;&gt;Google Cloud&lt;/a&gt;。如果决定使用 DO 为服务提供商，不妨使用我的&lt;a href=&#34;https://m.do.co/c/aa65d3d64a9d&#34; target=&#34;_blank&#34;&gt;分享链接&lt;/a&gt; 注册，这样我会因为你的使用而获得收益。&lt;/p&gt;

&lt;h2 id=&#34;建立-shadowsocks&#34;&gt;建立 shadowsocks&lt;/h2&gt;

&lt;p&gt;以 Ubuntu 为例介绍如何在服务器端安装 shadowsocks：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install python-pip
pip install shadowsocks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来需要配置 shadowsocks，使用 &lt;code&gt;nano&lt;/code&gt; 打开配置文件：
&lt;code&gt;/etc/shadowsocks.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano /ect/shadowsocks.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在打开的文件中粘贴入下列设置，把 IP 地址改成服务器地址，密码自己设置。&lt;code&gt;server port&lt;/code&gt; 为服务器对外提供的端口。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;IP adress of your server&amp;quot;,
    &amp;quot;server_port&amp;quot;:8388,
    &amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;PASSWORD&amp;quot;,
    &amp;quot;timeout&amp;quot;:300,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,
    &amp;quot;fast_open&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Ctrl+x&lt;/code&gt; 推出 nano，然后选择&lt;code&gt;y&lt;/code&gt; 保存修改。&lt;/p&gt;

&lt;p&gt;shadowsocks 服务可以使用下列命令打开关闭：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ssserver -c /etc/shadowsocks.json -d start
sudo ssserver -c /etc/shadowsocks.json -d stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要注意的是，如果为了安全考虑开了防火墙，默认端口是不会打开的。所以需要下列命令来开放端口让自己电脑得以访问。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ufw allow 8388
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;本地客户端&#34;&gt;本地客户端&lt;/h2&gt;

&lt;p&gt;iOS 端我自己在使用&lt;a href=&#34;https://itunes.apple.com/us/app/shadowrocket/id932747118?mt=8&#34; target=&#34;_blank&#34;&gt;Shadowracket&lt;/a&gt;, 因为 Surge 太贵了。
Mac OS 和其余PC 客户端可以在 &lt;a href=&#34;https://shadowsocks.org/en/download/clients.html&#34; target=&#34;_blank&#34;&gt;shadowsocks.org&lt;/a&gt; 中下载到。&lt;/p&gt;

&lt;p&gt;按照上面的 &lt;code&gt;shadowsocks.json&lt;/code&gt; 中的 IP 地址，端口和密码，就可以在本地连接到服务器，添加代理上网了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用爬虫批量下载课程主页的课件</title>
      <link>http://gggchen.github.io/post/scraping/</link>
      <pubDate>Mon, 30 Apr 2018 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/scraping/</guid>
      <description>

&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;

&lt;p&gt;最近在看 Meshfree 拟合函数的方法, &lt;a href=&#34;https://www.worldscientific.com/worldscibooks/10.1142/6437&#34; target=&#34;_blank&#34;&gt;教材&lt;/a&gt; 需要用到的 Matlab 代码和数据有在&lt;a href=&#34;http://www.math.iit.edu/~fass/590/handouts/&#34; target=&#34;_blank&#34;&gt;课程主页&lt;/a&gt;上. 要跑每个代码需要先下载到本地. 简单的方法, 可以每个文件单独点击下载. 但是我懒得这样做(而且想练习一下之前看的爬虫), 所以写了程序来批量下载所有数据文件.&lt;/p&gt;

&lt;p&gt;所以问题是, 已知一个网页, 网页上有链接指向想要下载的文件, 需要过滤得到需要文件的网址, 下载保存到本地.&lt;/p&gt;

&lt;h2 id=&#34;问题解决&#34;&gt;问题解决&lt;/h2&gt;

&lt;p&gt;使用 Python3.6&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from urllib.request import urlretrieve
from urllib.request import urlopen
from bs4 import BeautifulSoup
import re

downloadDirectory = &#39;/Users/Username/Documents/meshfree/matlab-code/&#39;
baseUrl = &#39;http://www.math.iit.edu/~fass/590/handouts/&#39;

# open url and filter it to get a list of file names to be downloaded
html = urlopen(baseUrl)
bs = BeautifulSoup(html, &#39;html.parser&#39;)
downloadList = bs.findAll(&amp;quot;a&amp;quot;, href=re.compile(&amp;quot;^[A-Za-z0-9_+]+\.[a-z+]+$&amp;quot;))

# download files
for download in downloadList:
    path = download.attrs[&#39;href&#39;]
    fileUrl = baseUrl + path
    if fileUrl is not None:
        print(fileUrl)
        urlretrieve(fileUrl, downloadDirectory+path)

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;urlretrieve&lt;/code&gt; 用于下载文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;urlopen&lt;/code&gt; 用于打开 url 网址, 获取 HTML 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BeautifulSoup&lt;/code&gt; 用于解析 HTML 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;re&lt;/code&gt; 利用正则表达式从 HTML 文件中获取想要的信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;downloadDirectory&lt;/code&gt;: 数据文件保存到本地的地址, 我的电脑上的一个路径.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;baseUrl&lt;/code&gt;: 目标网址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;findAll&lt;/code&gt;: 从 HTML 文件中找到所有符合条件的网址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;re.compile&lt;/code&gt;: 使用正则表达式过滤&lt;/li&gt;
&lt;li&gt;&lt;code&gt;downloadList&lt;/code&gt;: 过滤得到的待下载文件列表&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后使用 &lt;code&gt;urlretrieve&lt;/code&gt; 函数逐一下载 待下载文件列表中的文件.&lt;/p&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/25752783-web-scraping-with-python&#34; target=&#34;_blank&#34;&gt;Web Scraping with Python&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>朗读者</title>
      <link>http://gggchen.github.io/post/the-reader/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/the-reader/</guid>
      <description>

&lt;p&gt;读了《朗读者》小说, 发现了一些电影中没有说明的细节.&lt;/p&gt;

&lt;h2 id=&#34;剧情&#34;&gt;剧情&lt;/h2&gt;

&lt;p&gt;十五岁的学生米夏在回家路上偶遇了三十六岁的汉娜, 两个人成为情人. 米夏每天放学先去去汉娜家给汉娜读书, 然后两人洗澡, 做爱. 汉娜在一天突然离开, 米夏很久之后才把汉娜忘掉, 却再也没法爱别人.&lt;/p&gt;

&lt;p&gt;米夏进了大学读法律, 再次看到汉娜是二战之后在法庭上, 汉娜作为关押犹太人的看守而被审判. 汉娜被指控终身监禁. 米夏后来一直继续为汉娜朗读小说, 把录音的磁带寄给狱中的汉娜. 汉娜在出狱前一天在狱中自杀.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://gggchen.github.io/img/the-reader.jpg&#34; alt=&#34;朗读 图片来自豆瓣&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;阶级&#34;&gt;阶级&lt;/h2&gt;

&lt;p&gt;电影只让我感觉这是一段在年龄上悬殊的感情, 小说中细致描写了双方的家庭, 让我意识到这段感情在阶级上也是很不匹配的. 汉娜是一个底层文盲, 米夏是高级知识分子的家庭.&lt;/p&gt;

&lt;p&gt;汉娜不识字, 经历坎坷, 十七岁去柏林, 在西门子做女工, 参加了一战, 战争后找了所有能干的工作, 认识米夏的时候在做公交车检票员这种简单工作.&lt;/p&gt;

&lt;p&gt;而米夏的父亲是一位哲学教授, 白天有学生排着队找他请教问题. 家里有着丰富的藏书, 他父亲自己还出过书.&lt;/p&gt;

&lt;p&gt;看电影的时候, 我把自己想象成的是米夏, 一个男性角色. 读小说看到汉娜这么坎坷的经历, 能更多代入汉娜这个角色. 汉娜第一次来到米夏的家里, 看到他家有一面墙的藏书. 汉娜和米夏出去玩, 只能依赖米夏找餐馆点菜住宿, 这种无助的底层角色刚到大城市两眼一抹瞎的状态让我很代入, 我也羡慕别人能在家里有一面墙的藏书. 也想起了自己从村里到城市的大开眼界, 第一次出国住宿时候的茫然无措.&lt;/p&gt;

&lt;h2 id=&#34;情侣的误会&#34;&gt;情侣的误会&lt;/h2&gt;

&lt;p&gt;电影里也有汉娜和米夏的吵架, 吵得莫名其妙, 读了小说才明白.&lt;/p&gt;

&lt;p&gt;汉娜是公交车剪票员, 米夏拐去搭乘她那一班公交车. 公车有两节, 两节都没有乘客, 前一节有司机, 所以米夏想单独和汉娜相处, 就一直呆在第二节车厢. 但是汉娜迟迟不来找自己, 和司机聊天. 米夏很生气, 自己专门来看她, 她却不理自己, 后来在一个荒凉地方下车了, 哭着走回去.而汉娜是不懂米夏想和她单独相处才没去找她, 可能也是为自己干这么简单的工作而不好意思了, 以为米夏不来第一节车厢找自己因为自己的工作太傻了. 这两个人才互相在乎而互相生气.&lt;/p&gt;

&lt;p&gt;汉娜说「你根本没伤到我, 你还不够格呢!」, 汉娜虽然嘴里这样说, 但是是生气的.&lt;/p&gt;

&lt;h2 id=&#34;法律的追溯权&#34;&gt;法律的追溯权&lt;/h2&gt;

&lt;p&gt;小说比电影深刻一些在于严肃法律问题的探讨, 电影完全避而不谈了.&lt;/p&gt;

&lt;p&gt;本书的作者是一位法官, 书中的米夏也是一位研究法律史的人. 再在法庭上遇见汉娜之前, 班上主要讨论的主题就是法律的追溯权. 为纳粹政府工作的人, 当初杀死犹太人的时候, 这些行为是合法的, 但是现在我们认为杀死犹太人是非法的, 所以这些汉娜这些工作人员因为过去的合法行为, 需要面临审判, 现在的法律要追溯到她们过去的行为. 米夏在庭审上遇见汉娜之前, 也是相信法律的追溯权的. 但是在法庭上见到自己的爱人受审判之后, 米夏内心就矛盾了, 我们真的应该追溯之前的犯罪, 我们在做正确的事情? 看到小说后半部分, 我猜想作者是把一些法律的严肃思考包装在一个爱情故事里, 把严肃问题通俗化了, 让更多人思考这样严肃的问题.&lt;/p&gt;

&lt;h2 id=&#34;麻木不仁&#34;&gt;麻木不仁&lt;/h2&gt;

&lt;p&gt;从小说里读到了两层的麻木不仁. 第一层是汉娜等为党卫军效力的人, 在杀死犹太人的时候, 不管是枪决还是送去毒气室. 她们并不恨犹太人, 她们也不爱犹太人, 她们对犹太人的态度是无所谓的, 不在乎的. 她们只是把今天的工作完成, 就像工人拧完今天的螺丝钉一样. 另一层的麻木不仁表现在对汉娜这些人的审判者上, 小说对法官和律师的描写很有意思. 法官和律师也并不真正关心正义, 法官连续庭审几天也很疲惫, 很不喜欢汉娜否定指控补充新的信息, 只想把活干完. 律师也是一样地例行公事, 关注自己辩护的辞令. 这些审判者虽然在审判犯下罪行的人, 但是小说把审判者和被审判者描写成了同一类人, 都想快速结束工作, 结束别人生命. 看似审判者代表了正义, 被审判者是罪恶的, 需要为过去的谋杀负责, 但是小说的描写说明, 审判者在审判的过程中, 犯下了和被审判者一样的罪行&amp;ndash; 麻木不仁.&lt;/p&gt;

&lt;h2 id=&#34;中文翻译&#34;&gt;中文翻译&lt;/h2&gt;

&lt;p&gt;说一说本书的中文翻译. 毕飞宇在他的《小说课》里聊到过小说的语言, 反面例子就是这版钱定平翻译的《朗读者》.
在米夏第二次见到汉娜, 汉娜在厨房换衣服, 米夏在门外偷看, 他被她换衣服时的自然和放松打动, 但是钱先生把汉娜单腿站着穿丝袜的体态翻译成「金鸡独立」 美感全没有了!&lt;/p&gt;

&lt;p&gt;毕飞宇说, 我虽然不懂外语, 但是这里翻译成「金鸡独立」肯定有问题. 其他很多处也有类似的别扭, 翻译者似乎很想卖弄自己会了一些四字成语, 不管合适还是不合适, 就用上了. 如果妳也要读这本小说, 可能德文或者英文版会更合适一些&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LaTex 转成 Word</title>
      <link>http://gggchen.github.io/post/latex2rtf/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/latex2rtf/</guid>
      <description>&lt;p&gt;因为我电脑没有 word 软件, 而且更喜欢纯文本的格式, 写的文档都是 &lt;code&gt;org&lt;/code&gt;, &lt;code&gt;md&lt;/code&gt; 或者 &lt;code&gt;tex&lt;/code&gt; 的. 最近写的论文, 因为公式众多, 还有很多文章内的交叉引用, 就用了 LaTex 来写, 交上了 PDF 格式. 学院竟然要求 word 版本, 让我很崩溃. 一个统计学院竟不支持 LaTex, 可能盗版就是力量吧. 抱怨的话就不宣泄了, 我还是转了.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://gggchen.github.io/img/soulanimal.jpg&#34; alt=&#34;curse&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pandoc 是个好用的工具, 但是转换的效果并不好, 搜了一下, 有工具 &lt;a href=&#34;http://latex2rtf.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;latex2rtf&lt;/a&gt;. 可以把 latex 文件转换成带有复文本格式文件.&lt;/p&gt;

&lt;p&gt;因为我的 &lt;code&gt;tex&lt;/code&gt; 文件是含有中文字符的, 最简单的命令如下, 不能将中文字符正确转化, 生成的 &lt;code&gt;rft&lt;/code&gt; 文件含有乱码.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;latex2rtf yourfile.tex
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜搜看看, 需要下面两步来实现中文字符的正确转化:
1. 在 &lt;code&gt;yourfile.tex&lt;/code&gt; 里加上 &lt;code&gt;package&lt;/code&gt; 支持:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   \usepackage[utf8]{inputenc} 
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;使用编码格式的转换命令:
&lt;code&gt;
latex2rtf -C utf8 yourfile.tex
&lt;/code&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其中, &lt;code&gt;-C utf8&lt;/code&gt; 是控制编码格式, 详细可以查看 &lt;code&gt;latex2rtf -h&lt;/code&gt; 了解&lt;/p&gt;

&lt;p&gt;还有其他用法, 可以看 &lt;a href=&#34;http://latex2rtf.sourceforge.net/usage.html&#34; target=&#34;_blank&#34;&gt;文档&lt;/a&gt;了解.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《女性主义》读书笔记</title>
      <link>http://gggchen.github.io/post/feminism/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/feminism/</guid>
      <description>

&lt;p&gt;听说女权主义内部也是有众多流派的, 去年读了李银河的《女性主义》, 做了读书笔记, 今天整理一下. 因为从小在一个男权社会里生长, 难免潜移默化受到男权的价值观影响, 了解一下女权主义能更 liberal 一点. 而且李银河这本书挺学术地介绍了女权主义的各个流派, 介绍了各个流派的主要代表人物和思想, 相互的争执的点. 这本书是不错的女权主义的入门书籍, 推荐.&lt;/p&gt;

&lt;p&gt;王小波写道, 这本书本来书名为《女权主义》, 但是审查部门不准许出现「女权」的字眼, 为了出版, 只好将 feminism 翻译为「女性主义」. 所以下面不沿用书中被审查后的字眼, 仍然采用「女权主义」称为各个流派.&lt;/p&gt;

&lt;p&gt;全文都是对书中内容的引用, 分为两部分, 对一些议题的看法和女权主义的流派介绍.&lt;/p&gt;

&lt;h2 id=&#34;男女区别&#34;&gt;男女区别&lt;/h2&gt;

&lt;p&gt;女权主义对于男女是否有差别, 也有不同的看法, 可以分为三种:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;强调男女相同: 男女平等, 两性的相似点超过不同点.&lt;/li&gt;
&lt;li&gt;强调男女不同: 女性优于男性, 女性所具有的女性特征比如和平, 关爱, 养育等优于攻击好战毁灭等男性特征.&lt;/li&gt;
&lt;li&gt;男女差别的无必要: 混淆两性界限, 人的差异并不足以产生对立两分的结果. 克服心灵、身体的两分, 身体是可变的, 不是不可变.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;生育&#34;&gt;生育&lt;/h2&gt;

&lt;p&gt;一些女权主义者反对强加在女性身上的生育义务的.
比如波伏娃说, 一个人并非生下来就是女人, 而是变成女人的. 母性是使女性成为奴隶的最技巧的方法. 只要人们仍然认为女性的主要工作是养育小孩, 女性便不会投身政治、科技. 她们也便不会怀疑男人的优越性. 我们几乎不可能告诉女性洗碗是她们的神圣任务, 于是告诉她们养育孩子是她们的神圣任务.&lt;/p&gt;

&lt;p&gt;费尔斯通 认为生育机制是女性受压迫的根源. 女性的生育功能造成两性不平等. 在孕产期, 女人的基本生活来源要依赖男人, 而人类婴儿有很长的育婴期, 这也导致了女性对男性的依赖. 她提出解决办法: 技术改造生育机制, 使生育得以在体外进行.&lt;/p&gt;

&lt;p&gt;其他人也列举的不生育的好处:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;女性有更多时间过自己生活;&lt;/li&gt;
&lt;li&gt;生育不应该决定女性的生活, 女性应当对自己的生活做出个人的决定.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;第二次浪潮与选美&#34;&gt;第二次浪潮与选美&lt;/h2&gt;

&lt;p&gt;在女权运动第二次浪潮中, 运动在美国的第一个大动作是反对选美, 抵制女性必须遵守的规则和某些女性身体标准. 1968年女权主义抨击了“美国小姐”选美活动.&lt;/p&gt;

&lt;p&gt;女人在日常生活中就是在进行一场持续不断的选美, 女性一直处在美貌竞赛的巨大压力下: 为了美打扮自己, 美容瘦身, 担心自己的相貌和身材达不到男性的审美标准. 女权主义者设置了自由垃圾桶, 将乳罩、腹带、紧身褡, 假睫毛一类东西扔进垃圾桶.&lt;/p&gt;

&lt;h2 id=&#34;卖淫&#34;&gt;卖淫&lt;/h2&gt;

&lt;p&gt;卖淫是一种没有受害人的犯罪行为或非罪行为. 因此卖淫问题不如说是一个道德伦理问题.
如何处置卖淫现象的问题上大致有三种立场: 卖淫非法化; 卖淫合法化; 卖淫非罪化.
女权主义者面临着两难选择: 如果同意卖淫合法化, 就相当于使女性身体商品化, 供男性剥削和消费; 但是反对卖淫, 禁娼限制了女性掌握和处置自己身体的权利.&lt;/p&gt;

&lt;p&gt;联合国文献在1956年《关于个人和卖淫中的交易的研究》提出, 卖淫本身不应当是非法的.&lt;/p&gt;

&lt;p&gt;我国刑法并不惩罚卖淫者和买淫者, 只惩罚强迫、组织、容留他人卖淫者. 但是, 在行政法规（国家治安管理处罚条例）中, 却是禁止卖淫嫖娼的. 这样的管理办法会导致
娼妓的人权难得保障, 杀害她们受到的惩罚较轻. 妓女是男权制社会所有女性群体最孤立、最污名化, 不但被整个社会贬低诅咒, 还被警察、嫖客、皮条客甚至某些女权主义者贬低诅咒.
作者希望能实现卖淫非罪化以将伤害减到最少. 拿非法化使妓女受剥削与非罪化相比, 两害相权取其轻.&lt;/p&gt;

&lt;p&gt;另一方面, 女性把卖淫当作摆脱贫困的手段, 反映了女性经济地位低下. 作者希望 提高女性社会地位以最终消灭卖淫.&lt;/p&gt;

&lt;h2 id=&#34;自由主义女权主义&#34;&gt;自由主义女权主义&lt;/h2&gt;

&lt;p&gt;主要观点: 在一个公平的社会里, 每一个成员都应该得到发挥自己潜力的机会, 男女应该拥有同等的竞争机会. 女性的不成功、不理性和看起来智力低下, 是因为她们没有获得和男性同等的受教育的机会. 反对性别差异, 强调两性的相似性.&lt;/p&gt;

&lt;p&gt;目标: 努力消除男女不平等, 为女性争取受教育权利、同工同酬的权利并争取相应法律改革.&lt;/p&gt;

&lt;p&gt;代表人物:  弗里丹认为女权运动不愿意处理家庭问题. 不喜欢激进女权主义的观点.（激进主义女权主义: 反对男人、反对家庭、烧掉胸罩; 不要刮掉腋毛和腿毛, 拒绝美容院和化妆品, 不要男士付餐馆的账单或为你开门, 不给他做早餐, 不洗他的袜子. ）
弗里丹批评激进女权主义者在反对的情绪中犯了一个错误: 过于生硬地套阶级斗争和种族压迫那一套. 把马克思主义应用到新的领域.
弗里丹最开始反对选美, 后来认为新阶段到来了. 女性运动开始反对选美因为那是对女性的蔑视. 现在既然女性已经是个人, 可以选择变得更加美丽.&lt;/p&gt;

&lt;p&gt;对自由主义女权主义的批评:  强调每个人的个人努力, 忽略了女性群体所处的不利地位, 忽略了集体行动的必要性&lt;/p&gt;

&lt;h2 id=&#34;激进主义女权主义&#34;&gt;激进主义女权主义&lt;/h2&gt;

&lt;p&gt;主要观点: 对女性的压迫超越了民族国家, 超越了社会形态. 这些压迫如果仅仅是改变女性的经济地位也难以改变. 认为敌人是社会和男人. 六七十年代, 女性的集会上经常会出现这样的场面: 一位女性高声问与会女性: 谁是我们的敌人？大家齐声回答去: 男人！&lt;/p&gt;

&lt;p&gt;认为自由主义女性走得不够远, 不仅要推翻男权制的法律、政治和经济结构, 还要推翻其社会、文化制度, 尤其是家庭、教会和学院. 拒绝学院传统, 认为白种西方男人精英政治是有问题的, 只是维护统治结构和等级的.&lt;/p&gt;

&lt;p&gt;激进女权主义者麦金农(MacKinnon)说: 做一个女人就是做一个被操的人…男人操女人; 主语-谓语-宾语.
性别身份就是男性把自己的性要求强加在女性身上. 性关系本身就是男性对女性的压迫.
按照麦金农的观点, 社会上的人被划分为两群: fuckors and fuckees&lt;/p&gt;

&lt;p&gt;激进派要求伴侣之间的性平等, 双方都既是主体, 又是客体; 反对男权主义的性实践, 虐恋, 猎艳式的临时性关系, 童恋, 以及阳刚阴柔(butch/femme)角色的划分, 因为会导致女性性的客体化.&lt;/p&gt;

&lt;h2 id=&#34;后现代女权主义&#34;&gt;后现代女权主义&lt;/h2&gt;

&lt;p&gt;主要观点: 除了自然科学, 所谓的客观真理只是一个梦想, 其实并不存在. 权力、理性、真理都是不清白的, 都是某种价值观（或利益）的表现.
质疑宏大叙事, 质疑启蒙时代的知识. 不仅反对性别的两分, 而且反对性别概念本身. 反对性别是天生的, 不可改变的.
后现代女权主义反对政治行动理念, 认为会陷入施虐与受虐的螺旋, 权力与反抗的螺旋. 按照福柯的逻辑, 当我们用对立的话语反击压迫时——如用女权主义话语挑战男尊女卑时——我们就进入了统治话语领域. 我们发明了新的标签和身份, 在向压迫挑战的同时, 也用新的方式压抑我们. 陷入一种身份: 女权主义者或者反对性别主义的人, 应该怎么想怎么做. 我们成为另一套体系的一部分.&lt;/p&gt;

&lt;p&gt;代表人物: 法国女权主义者威蒂格认为女性并非生来就是女人, 女性的身体也是社会造成的. 反对激进主义者对女性气质的讴歌, 主张真正的女性解放要超越激进女权主义的女性优越论. 真正的解放是消灭作为阶级的男人和女人, 理想的新社会中只有“人”, 没有女人和男人.&lt;/p&gt;

&lt;h2 id=&#34;文化女权主义&#34;&gt;文化女权主义&lt;/h2&gt;

&lt;p&gt;主要观点: 强调女性具有的特质优于男性文化: 批评男性的攻击性占有性等特征, 肯定女性的被动性, 抚育性, 富有感情, 对他人的依赖.&lt;/p&gt;

&lt;p&gt;对文化女权主义的批评:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;并没有摆脱种族主义、法西斯主义的范畴. 没有证据表明女性一定和平, 男性一定战争. 撒切尔夫人当政, 英国开战阿根廷, 女人当政不能制止战争.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;即使男性真的天性好斗, 也有荷尔蒙缺乏, 也不能被算为劣等种族. 不能因为天生特质, 像皮肤、天生残疾, 就把一些人视为劣等人.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;文化女权主义也被视为一种分离主义的女权主义. 女性比男性高明, 社会如果建立女性价值观上, 会更有生产能力, 更公正. 建立女性文化, 从而使男女两性隔离. 分离主义女权主义主张完全脱离男权文化, 建立女性文化. 竞争与强权的世界格局是男性造成的, 应当建立单独的女性社区.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;权力女权主义&#34;&gt;权力女权主义&lt;/h2&gt;

&lt;p&gt;权力女权主义认为其他女权主义者犯了错误: 强调女性是受害者、受压迫者. 权力女权主义告诉女性: 女性不是受害者, 除非她们自己选择当受害者.
反对反强奸游行, 认为是哀鸣, 把自己摆在弱者的位置.
反对政治正确, 总是要求人们保持政治上的正确性, 导致了教条主义的不宽容气氛.&lt;/p&gt;

&lt;p&gt;目标: 改变妈妈做饭, 爸爸读报, 妈妈打毛衣, 爸爸看电视的刻板印象. 从幼年时代, 给孩子灌输新观念: 男女都是一样的人, 除了生理上的区别之外, 在学校、家庭生活和社会就业都没理由因性别不同而有所区别. 教育女孩大胆一些, 男孩子温柔细致一些, 帮助男孩女孩从小相互了解.
(而中国的传媒却在讨论女性的男性化问题. 希望让女人更像女人, 男人更像男人. 提醒人们注意女性解放中的危险. )&lt;/p&gt;

&lt;h2 id=&#34;男性运动&#34;&gt;男性运动&lt;/h2&gt;

&lt;p&gt;男性运动: 鼓励男性公开宣称他们拒绝男性气质的传统, 转而分享温柔的感觉, 表达更慈爱、更关怀、较少竞争性的男性气质.
他们能够敏感脆弱、温柔多情、富有同情心; 既然不需要打猎, 他们就不必有大块的肌肉; 他们可以承认他们害怕, 他们甚至会哭泣.&lt;/p&gt;

&lt;h2 id=&#34;后女权主义&#34;&gt;后女权主义&lt;/h2&gt;

&lt;p&gt;反思了女权主义:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;女权主义夸大了男女不平等的问题, 是一种受害者的哲学&lt;/li&gt;
&lt;li&gt;男女不平等不应该以对立态度提出, 而应该以寻求两性和谐的态度提出&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;新女权主义&#34;&gt;新女权主义&lt;/h2&gt;

&lt;p&gt;新女权主义务实, 不讲理论. 平衡工作和家庭. 新女权主义欢迎女性也欢迎男性, 欢迎保守派也欢迎左派社会主义者. 承认男权制的存在, 并且试图改变它.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emacs cannot find pdflatex PATH</title>
      <link>http://gggchen.github.io/post/pdflatex/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/pdflatex/</guid>
      <description>

&lt;h2 id=&#34;problem-description&#34;&gt;Problem description&lt;/h2&gt;

&lt;p&gt;After installing Spacemacs, my org file cannot export to PDF file, the following error message always pops out:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;command not found: pdflatex
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;It finally turns out it is my Macbook move &lt;code&gt;/usr/texbin&lt;/code&gt; to &lt;code&gt;/Library/TeX/texbin&lt;/code&gt;, according to &lt;a href=&#34;https://superuser.com/questions/982647/cannot-find-pdflatex-after-upgrade-to-mac-os-x-10-11-el-capitan&#34; target=&#34;_blank&#34;&gt;this answer&lt;/a&gt;, I added &lt;code&gt;export PATH=&amp;quot;$PATH:/Library/TeX/texbin&amp;quot;&lt;/code&gt;to my &lt;code&gt;.zshrc&lt;/code&gt;. and then&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source .zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to update my settings.&lt;/p&gt;

&lt;p&gt;After restarting my emacs, finally Emacs can export org file to PDF file. :D&lt;/p&gt;

&lt;h2 id=&#34;rule-out-other-possible-problem&#34;&gt;Rule out other possible problem&lt;/h2&gt;

&lt;p&gt;I also tried to solve this by some other methods but failed.&lt;/p&gt;

&lt;h3 id=&#34;possibility1-no-latex-installed-in-my-computer&#34;&gt;Possibility1: no Latex installed in my computer&lt;/h3&gt;

&lt;p&gt;But I can build PDF from &lt;code&gt;.tex&lt;/code&gt; file smoothly in Sublime. It seems that Sublime could find pdflatex in my computer but Emacs cannot.&lt;/p&gt;

&lt;h3 id=&#34;possibility2-emacs-did-not-include-my-system-zsh-path-thus-fail-to-find-pdflatex&#34;&gt;Possibility2: Emacs did not include my system zsh PATH thus fail to find pdflatex&lt;/h3&gt;

&lt;p&gt;When I run &lt;code&gt;which pdflatex&lt;/code&gt;, zsh cannot find my pdflatex as well.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;which pdflatex
pdflatex not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is no pdflatex recognized by my zsh as well. And What I use is &lt;a href=&#34;http://spacemacs.org/&#34; target=&#34;_blank&#34;&gt;Spacemacs&lt;/a&gt; thus &lt;a href=&#34;https://github.com/purcell/exec-path-from-shell&#34; target=&#34;_blank&#34;&gt;exec-path-from-shell&lt;/a&gt; is already installed for me to ensure environment variables inside Emacs look the same as in the user&amp;rsquo;s shell.&lt;/p&gt;

&lt;p&gt;It turns out there is no &lt;code&gt;texbin&lt;/code&gt; under my &lt;code&gt;/usr&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;I Google this problem. Mac OS X El Capitan moved my &lt;code&gt;/usr/texbin&lt;/code&gt; to &lt;code&gt;/Library/TeX/texbin&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debug Ocenaudio</title>
      <link>http://gggchen.github.io/post/ocenaudio/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/ocenaudio/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ocenaudio.com/&#34; target=&#34;_blank&#34;&gt;Oceanaudio&lt;/a&gt; is a good and beautiful software to edit audio documents. But recently, ocenaudio on my Macbook is very unstable, the sound it plays is too strange, just like somepeople talk with her/his mounth closed.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;v tried substitutes to ocenaudio, like &lt;a href=&#34;http://www.audacityteam.org/&#34; target=&#34;_blank&#34;&gt;Audacity&lt;/a&gt; and &lt;a href=&#34;http://ardour.org/&#34; target=&#34;_blank&#34;&gt;Ardour&lt;/a&gt;, but UI of Audacity is bad designed and Ardour 5 is for people to record and edit, not for me.&lt;/p&gt;

&lt;p&gt;I finally fixed the problem on my Ocenaudio.
It turned out when I adjest the buffer size, it works fine again.&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;Preference/Sound/Buffer Size&lt;/code&gt;, if it is &lt;code&gt;1024 samples&lt;/code&gt;, then I change it to &lt;code&gt;512 samples&lt;/code&gt;, if it is &lt;code&gt;512 samples&lt;/code&gt;, I change it to &lt;code&gt;1024 samples&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I could edit my audio document now ヽ( ^∀^)ﾉ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Warning on Replace Broken iPhone Screen</title>
      <link>http://gggchen.github.io/post/iphone-screen/</link>
      <pubDate>Sat, 30 Sep 2017 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/iphone-screen/</guid>
      <description>&lt;p&gt;Most articles describe replacement of iPhone screen or battery cells as easy, something to repair a Thinkpad person computer. but they fail to underline the possible risk.&lt;/p&gt;

&lt;p&gt;I changed my iPhone 6s broken screen this month but failed. I bought a new screen along with a repair kit from Amazon.&lt;/p&gt;

&lt;p&gt;I was excited once I received the package because I envision I could say goodbye to this broken screen and have a brand new iPhone. I opened my iPhone in a rash without backup. The repair is a long and hard process, not fun at all. These tutorial had warned me the screws are easy to lost. I drew picture on paper to help to memorize their location. I did not mess up my screw. The tuorial show me to disconnect the cable joining the mainboard with battery. It surely could make sure I would burn my board. But when I want to reinstall everything back. I had probrems. I cannot connect the cable only with niezi, so I use my figures without any gloves. Finally I changed the broken screen with new screen and build it a whole. But I cannot power on. Even with charge on. I thought I burn my cell phone when I tried to connect the cable to the battery.&lt;/p&gt;

&lt;p&gt;I sent my iPhone to Genius Bar. The mechaina said Apple won&amp;rsquo;t repair iPhone once customers open their iPhone themselves for the reason that possible risk of explosion. They swape a new iPhone for me with charge of $300.&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;d asked Genius Bar to replace my iPhone at first, the charge is only $190. Moreover, I would not lose my data for Apple warn that they could erase all your data, so they inform this risk. I would follow their instructions.&lt;/p&gt;

&lt;p&gt;Lessons:
1. Backup first before repairment.
2. risk to burn the main borad&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>稍后读并且存档</title>
      <link>http://gggchen.github.io/post/read-it-later/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/read-it-later/</guid>
      <description>

&lt;p&gt;解决的问题:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;长文章当时读不完就收藏了, 但是收藏的文章从来不会读完&lt;/li&gt;
&lt;li&gt;读过的文章没有将整个网页保存起来, 以后网页一旦失效, 就找不到了&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;解决方法:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用 &lt;a href=&#34;https://getpocket.com/&#34; target=&#34;_blank&#34;&gt;Pocket&lt;/a&gt; 或者 Instapaper&lt;/li&gt;
&lt;li&gt;使用 &lt;a href=&#34;https://ifttt.com/&#34; target=&#34;_blank&#34;&gt;ifttt&lt;/a&gt; 将  Pocket 读完的文章自动存档到 &lt;a href=&#34;https://www.evernote.com/&#34; target=&#34;_blank&#34;&gt;Evernote&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;稍后读&#34;&gt;稍后读&lt;/h2&gt;

&lt;p&gt;之前在 Safari Reading List, Evernote 等地方收藏了一堆的文章, 但是我从来不读. 就像一直戏谑的, read it later 变成 read it never. 后来听了 &lt;a href=&#34;http://checked.fm/&#34; target=&#34;_blank&#34;&gt;Checked&lt;/a&gt; 某一期的博客, 认识到了而且可以用 Pocket 或者 Instapaper 解决, 就开始使用了这个 Pocket 作为稍后读的工具.&lt;/p&gt;

&lt;h3 id=&#34;我的稍后读流程&#34;&gt;我的稍后读流程&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;浏览 RSS 订阅的消息. 我使用 Reeder3 来订阅 RSS 源, 如果觉得读某一篇时觉得一时没有时间读, 就用 Reeder3 发送到 Pocket&lt;/li&gt;
&lt;li&gt;平时各种空闲时间, 不打开微信各种社交软件, 而是打开 Pocket 查看之前收藏的文章, 这样一天大概是能够把之前加入的文章读完的&lt;/li&gt;
&lt;li&gt;在 Pocket 读完的文章, 勾选读完之后, ifttt 会自动帮我把文章全文存档到 Evernote&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面详细说明利用 ifttt 存档到 Evernote&lt;/p&gt;

&lt;h2 id=&#34;笔记存档&#34;&gt;笔记存档&lt;/h2&gt;

&lt;p&gt;需要做的准备:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一个任意的 Gmail 邮箱&lt;/li&gt;
&lt;li&gt;Evernote 的中级或高级帐号. Evernote 需要购买中级或者高级版本, 才可以使用发送邮件到 Evernote 的邮箱保存该邮件为笔记的功能.&lt;/li&gt;
&lt;li&gt;Evernote 在&lt;code&gt;settings/account summary/Email notes to&lt;/code&gt; 下面, 找到形式为 &lt;code&gt;xxxx.xxxx@m.evernote.com&lt;/code&gt; 的邮箱, 这是用来接受笔记并且保存的邮箱&lt;/li&gt;
&lt;li&gt;安装并且注册 ifttt&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;配置方法&#34;&gt;配置方法&lt;/h3&gt;

&lt;h4 id=&#34;ukeeper&#34;&gt;Ukeeper&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://gggchen.github.io/img/ukeeper.png&#34; alt=&#34;ukeeper&#34; /&gt;
在 &lt;a href=&#34;http://www.ukeeper.com/&#34; target=&#34;_blank&#34;&gt;http://www.ukeeper.com/&lt;/a&gt; 用邮箱注册账户, 把用来发消息的 Gmail 邮箱填写到 &lt;code&gt;Regular e-mail&lt;/code&gt;, Evernote 的邮箱填写到 &lt;code&gt;Forwarding e-mail&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;ifttt&#34;&gt;ifttt&lt;/h4&gt;

&lt;p&gt;在 ifttt 中使用我所创建的一个 &lt;a href=&#34;https://ifttt.com/applets/CpkZGRbF-save-archived-items-in-pocket-full-articles-using-ukeeper-com&#34; target=&#34;_blank&#34;&gt;applet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;绑定 Gmail 邮箱(和上面 ukeeper 的 Regular e-mail 一致), 绑定 Pocket 账户, 就能愉快地使用了.
这里的 To Address 中的邮箱选择默认的 &lt;a href=&#34;mailto:drops@ukeeper.com&#34; target=&#34;_blank&#34;&gt;drops@ukeeper.com&lt;/a&gt; 就好, 不需要做更改.&lt;/p&gt;

&lt;h3 id=&#34;ifttt-的-applet-配置原理&#34;&gt;ifttt 的 applet 配置原理&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;如果 ifttt 检测到我的 Pocket 中 读完(Archive) 了文章&lt;/li&gt;
&lt;li&gt;那么 ifttt 就会利用绑定的 Gmail 发送一封邮件到 &lt;a href=&#34;mailto:drops@ukeeper.com&#34; target=&#34;_blank&#34;&gt;drops@ukeeper.com&lt;/a&gt;, 标题为&amp;rdquo;文章的标题 + @Archive, #Pocket, #Tags&amp;rdquo;, 邮件正文为 Pocket 保存文章的 Url&lt;/li&gt;
&lt;li&gt;然后 ukeeper.com 会自动把 Url 提取出页面, 变成邮件正文, 而标题仍然是 &amp;ldquo;文章的标题 + @Archive, #Pocket, #Tags&amp;rdquo;(@Archive 为指定 Evernote 中保存文件夹到 Archive 文件夹, 标签为 pocket 和文章的其他标签) 发送到我的notebook 的 Archive 文件夹, 贴上 pocket 和 Pocket 原有的标签&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里之所以执着于标签, 是想像 Checked 的主播 Hum 一样, 想让 Pocket 和 Evernote 使用同一套标签体系. 而之所以用标签, 而不是文件夹管理, 是因为文件夹的层次结构树状的, 就是一篇文章在A目录下, 就不能在 B 目录下. 而不同标签可以加在同一文件上.&lt;/p&gt;

&lt;h2 id=&#34;debug&#34;&gt;Debug&lt;/h2&gt;

&lt;p&gt;如果并不能实现 Pocket 发送文章保存到 Evernote 的功能, 请测试:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ifttt 是否工作: 将 ifttt 中的 cc Address 改为你的任意其他邮箱, 在 Pocket 中 Archive 一篇文章, 是否在邮箱中能收到由 ifttt 发送到该邮箱的邮件.&lt;/li&gt;
&lt;li&gt;ukeeper 和 Evernote 是否工作, 用注册 ukeeper 的 Gmail 邮箱向 &lt;a href=&#34;mailto:drops@ukeeper.com&#34; target=&#34;_blank&#34;&gt;drops@ukeeper.com&lt;/a&gt; 发送一封邮件, 是否在 Evernote 中能够收到保存的笔记&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面附上我 ifttt filter code 的代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var PocketTagList = Pocket.newReadItemRil.Tags.split(&#39;, &#39;);
var PocketTag = PocketTagList.join(&#39;, #&#39;);

Gmail.sendAnEmail.setSubject(Pocket.newReadItemRil.Title + &#39; @Archive, #Pocket, #&#39; + PocketTag);
Gmail.sendAnEmail.setBody(Pocket.newReadItemRil.Url);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sspai.com/post/33933&#34; target=&#34;_blank&#34;&gt;用 GTD 的方法结束稍后读&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SML mode in Spacemacs</title>
      <link>http://gggchen.github.io/post/sml/</link>
      <pubDate>Sat, 13 May 2017 00:00:00 +0200</pubDate>
      
      <guid>http://gggchen.github.io/post/sml/</guid>
      <description>

&lt;h1 id=&#34;sml-repl-in-spacemacs&#34;&gt;SML REPL in Spacemacs&lt;/h1&gt;

&lt;p&gt;After installing sml and adding a sml layer in my spacemacs, I typed &lt;code&gt;C-c-C-s&lt;/code&gt; or &lt;code&gt;M-x sml RET&lt;/code&gt;, a sml REPL did not show up. An error message showed up instead:&lt;/p&gt;

&lt;p&gt;{% codeblock lang:sh %}
sml: no such file or directory
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;But I could type &lt;code&gt;sml&lt;/code&gt; to start a sml REPL in my terminal. It turned out I should add the sml path to my emacs. After searching with Google, I typed following into my terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ which sml
/usr/local/smlnj/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I added sml path in my operation system to my &lt;code&gt;.spacemacs&lt;/code&gt; file &lt;code&gt;user-init&lt;/code&gt; function, adding sml path to spacemacs exec-path:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(setq exec-path (cons &amp;quot;/usr/local/smlnj/bin/&amp;quot; exec-path))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then restart Emacs, sml REPL could work.&lt;/p&gt;

&lt;h1 id=&#34;make-changes-in-sml-mode-package&#34;&gt;make changes in sml-mode package&lt;/h1&gt;

&lt;p&gt;When I write code everytime in &lt;code&gt;sml-mode&lt;/code&gt;, sml auto complete key words for me, this auto completition is terrible, I try to avoid this.&lt;/p&gt;

&lt;p&gt;Everytime I type &lt;code&gt;val&lt;/code&gt; then &lt;code&gt;SPACE&lt;/code&gt;, sml will complete it as &lt;code&gt;val =&lt;/code&gt;, the cursor is after the &lt;code&gt;=&lt;/code&gt;, I have to &lt;code&gt;C-b&lt;/code&gt; to make the cursor go back after val and type the variable name.&lt;/p&gt;

&lt;p&gt;It turns out that sml-mode is to blame, the function to enable auto completition is within the &lt;code&gt;sml-mode.el&lt;/code&gt; in sml-mode. This function is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(defmacro sml-def-skeleton (name interactor &amp;amp;rest elements)
  (let ((fsym (intern (concat &amp;quot;sml-form-&amp;quot; name))))
    `(progn
       (add-to-list &#39;sml-forms-alist &#39;,(cons name fsym))
       (define-abbrev sml-mode-abbrev-table ,name &amp;quot;&amp;quot; &#39;,fsym nil &#39;system)
       (let ((abbrev (abbrev-symbol ,name sml-mode-abbrev-table)))
         (abbrev-put abbrev :case-fixed t)
         (abbrev-put abbrev :enable-function
                     (lambda () (not (nth 8 (syntax-ppss))))))
       (define-skeleton ,fsym
         ,(format &amp;quot;SML-mode skeleton for `%s..&#39; expressions&amp;quot; name)
         ,interactor
         ,(concat name &amp;quot; &amp;quot;) &amp;gt;
         ,@elements))))
(put &#39;sml-def-skeleton &#39;lisp-indent-function 2)

(sml-def-skeleton &amp;quot;let&amp;quot; nil
   @ &amp;quot;\nin &amp;quot; &amp;gt; _ &amp;quot;\nend&amp;quot; &amp;gt;)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since I know little about elisp, the only solution to me is to comment these funcitons. I have to do so in the sml-package, but if I delete it in the elpa directory, it will be download again automatically and my deletation disappear.&lt;/p&gt;

&lt;p&gt;Refer to an &lt;a href=&#34;https://emacs.stackexchange.com/questions/20453/how-to-use-a-local-version-of-a-package-in-spacemacs&#34; target=&#34;_blank&#34;&gt;solution&lt;/a&gt;, I fork sml-mode from &lt;a href=&#34;https://github.com/emacsmirror/sml-mode&#34; target=&#34;_blank&#34;&gt;emacsmirror&lt;/a&gt;, then comment this redundant function in my fork version.&lt;/p&gt;

&lt;p&gt;Edit my &lt;code&gt;.spacemacs&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;   dotspacemacs-additional-packages
   &#39;((sml-mode :location (recipe :fetcher github :repo &amp;quot;CauchyChe/sml-mode&amp;quot;)))
   ;; A list of packages that cannot be updated.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart my emacs, spacemacs will download sml-mode from Github, auto completition is disabled.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>learn how to learn</title>
      <link>http://gggchen.github.io/post/learn_motivate/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0100</pubDate>
      
      <guid>http://gggchen.github.io/post/learn_motivate/</guid>
      <description>

&lt;p&gt;以前对于如何学习有着不很系统的, 基于我自己经验的了解, 学习了
C站上的&lt;a href=&#34;https://www.coursera.org/learn/learning-how-to-learn/home/info&#34; target=&#34;_blank&#34;&gt;learn how to learn&lt;/a&gt; 课程之后, 才知道学习背后的生理上和心理上的原因, 还改变了之前一些错误的认识, 像以为通宵熬夜学习是学习的好方法.&lt;/p&gt;

&lt;p&gt;强烈推荐跟着学一下这门课.&lt;/p&gt;

&lt;h2 id=&#34;chunks&#34;&gt;chunks&lt;/h2&gt;

&lt;h3 id=&#34;什么是-chunk&#34;&gt;什么是 chunk?&lt;/h3&gt;

&lt;p&gt;大脑形成的一群相互连接的神经元, 所以能够顺利完成一系列动作. 最好的 chunk 是这样, 一旦这个chunk 形成了, 不需要记住所有细节, 下意识就可以完成一个动作. 《倚天屠龙记》中赵敏找武当的麻烦, 张无忌需要短时间跟张三丰学会太极剑, 张无忌临时学了然后又自己演练了一会, 张三丰问他还记得多少, 张无忌说还记得一两招, 张三丰就等无忌又练了一段, 最后张无忌回答说他已经完全忘记了, 张三丰说你可以上了.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;例子&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;学习的过程是循序渐进的, 最开始是小的 chunk, 最后小 chunk 连起来形成大的 chunk&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过学习一门新语言, 比如日语, 从50音图开始, 学习语音语调, 掌握词汇, 后来能够根据情景流畅地说出一个句子.&lt;/li&gt;
&lt;li&gt;学会骑自行车之后, 就能协调地在平衡的情况下蹬脚蹬.&lt;/li&gt;
&lt;li&gt;弹吉他, 先练习指法, 练习一个个片段, 最后熟练弹奏一段曲子&lt;/li&gt;
&lt;li&gt;学数学, 最开始试图解答一个问题, 需要的认知负荷很大, 最好先用例子明白核心和背后的原则, 然后再看概念. 类似先依照地图走到想去的地方, 最后自己不需要地图也能够走到. 熟悉例子之后, 思考为什么每一步要这样走, 为什么在这个时候走这一步.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;怎样形成-chunk&#34;&gt;怎样形成 chunk?&lt;/h3&gt;

&lt;p&gt;怎样形成一个 chunk, 不管是体育训练肌肉记忆, 还是思维训练解决一个问题, 都是类似的:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;集中注意力在要学习的材料
戒绝电话, 各种社交软件&lt;/li&gt;
&lt;li&gt;理解: 如果信息不被理解, 那就是无用的&lt;/li&gt;
&lt;li&gt;回顾: 如果不经常使用, 记忆会衰退地很快, 会在课堂上明明理解了, 但是下来做题又不会了&lt;/li&gt;
&lt;li&gt;自己做一遍: 看着别人做一遍, 总是别人的技能, 需要自己做一遍才能发现自己哪个节点不会, 最后自己掌握技能. 从这个意义上来说, 犯错是件好事.&lt;/li&gt;
&lt;li&gt;联系情景: 这一步要求不仅仅知道怎样完成这个 chunk, 还需要知道什么时候用到这个 chunk. 重复练习把初始的问题解决办法应用到相关和不相关的问题上, 学会什么时候使用, 什么时候不使用. 这样会帮助把这个技能和其他技能相结合, 最后这些技能分门别类, 形成一个技能库. 如果不知道什么时候该使用该技能, 什么时候不适合使用, 这个技能很难有用. 通过不同情景练习的强化, 更广泛的神经元被连接到这个 chunk 上, 确保不仅仅是能顺畅使用, 还能在不同时候灵活召唤出来这个大招.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这里需要格外强调如何完成chunk(how)和何时使用该技能(when)的区别, 前者是用的时候能够顺畅地完成, 后者是知道什么时候用到这个技能. 勤加练习会帮助 how 和 when 技能的形成. 另外书本上的每一章的标题和副标题会有帮助, 帮助形成 when 的思维.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;回忆(Recall)&lt;/p&gt;

&lt;p&gt;一提到复习, 比较容易的方式是反复地看书, 看笔记. 其实这是很低效率的方法, 因为书看再多, 书上的内容也只是作者的. 甚至高亮也是一种欺骗, 以为自己划下的句子都记住了, 产生虚假的成就感.&lt;/p&gt;

&lt;p&gt;更高效的方式, 试图回忆起读过的材料, 如果回忆不起来, 就看看那些回忆不起的内容, 以后再试着回忆一遍, 这样重复. 这种方法是测试为导向的, 了解自己真正掌握了多少内容, 还有多少不明白的.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;情绪&lt;/p&gt;

&lt;p&gt;学习时候的情绪也很重要. 当学习那些有趣的东西, 学起来会更加容易.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Overlearning, Einstellung, Interleaving&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Overlearning: 需要持续训练, 但是可能反复测试自己, 都是已经掌握了这个能力了, 那就没必要浪费时间继续学习这个, 否则叫做 overlearning&lt;/li&gt;
&lt;li&gt;Einstellung: 德语词, mindset, 路障, 引申含义为思维固化. 这个词是为了说明 chunk 的不好的一面, 当你形成一定的神经连接之后, 这样的连接可能会阻止其他更好的想法的形成.&lt;/li&gt;
&lt;li&gt;interleaving: 一旦了解了最基础的 idea, 在不同变化, 不同随机组合中尝试, 练习, 大有益处.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为什么在一些场景用一个技巧, 另一些用其他的一本书的不同章节的习题同时混着做, 增加难读(这一题用哪一块的知识呢?) 但会学得更深.&lt;/p&gt;

&lt;p&gt;也不必羡慕那些很能在各种情况集中注意力的人, 我们这些经常走神的人也是很有优势的, 因为他们容易形成 Einstrllung, 但是我们的思维更发散, 可能更富有创新性.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;拖延症&#34;&gt;拖延症&lt;/h2&gt;

&lt;h3 id=&#34;关于拖延症&#34;&gt;关于拖延症&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为什么拖延&lt;/p&gt;

&lt;p&gt;生活太艰难了, 打算专心干一件事情的时候, 这件事往往会很麻烦. 复习专业课, 那些专业术语总是艰涩难懂, 数学公式各种上下标, &amp;#x2026; 所以啊, 还是其他各种事情更有意思一点, 不如扣一会手机吧, 看看微信有没有人联系我, 看看&lt;/p&gt;

&lt;p&gt;我们会对那些让我们感到不舒服的事情拖延, 把注意力转移到其他地方, 这让我们舒服, 虽然只是暂时的.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;病入膏肓的拖癌&lt;/p&gt;

&lt;p&gt;拖延症和成瘾症状类似,拖延提供了暂时的因为远离无聊现实的兴奋和宽慰. 很容易这样&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;会在交稿的 deadline 之前大量时间浏览各种网上信息, 告诉自己在为写稿手机资料, 但是迟迟不肯真正动笔去写.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;告诉自己有机化学需要空间想象能力, 刚好这个是你不擅长的, 所以当然你学不好有机化学.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;想出一些听起来很对的理由: 如果我现在复习地太超前了, 就会忘掉的.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;还会告诉自己, 我已经懒癌病入膏肓了, 无药可医, 我已经放弃治疗了.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a id=&#34;orgf0e2bff&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;如何避免拖延&#34;&gt;如何避免拖延&lt;/h3&gt;

&lt;p&gt;意志力是稀缺资源, 尽量别浪费意志力对抗拖延症上面, 而是养成好的习惯, 不假思索地把事情都完成了, 而不需要艰难的思想斗争. 习惯的养成, 就像学习倒车一样, 最开始控制不好车的方向, 把车开得七扭八歪的, 后来养成习惯就单手扶方向盘也能倒. 对抗拖延症也是一样, 习惯养成就好.&lt;/p&gt;

&lt;p&gt;立即行动的习惯养成, 需要四个部分: cue, routine, reward 和 belief.&lt;/p&gt;

&lt;p&gt;还可以使用番茄工作法, 专心工作25分钟, 然后放松一会, 然后继续工作.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;the Cue&lt;/p&gt;

&lt;p&gt;看见生活中的一些事, 会开始做另一些事. 比如, 看见 to-do list 里面的项目1 事项, 就开始做这件事; 或者, 看见朋友来的一个短信, 就开始出去玩了.&lt;/p&gt;

&lt;p&gt;意志力需要花费在见到 Cue 的反应上, 也是唯一需要花费意志力的地方.&lt;/p&gt;

&lt;p&gt;the Cue 可以细分为 4 类:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Location&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;How you feel&lt;/li&gt;
&lt;li&gt;Reaction
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以如果要专心做事, 要培养好的 Cue, 需要关掉手机, 远离网络, 需要没有干扰的一段时间.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;the Routine&lt;/p&gt;

&lt;p&gt;因为学习活动, 自己会经常转移到那些不那么痛苦的活动钟, 一旦有 cue 自己会自动进入这些活动.&lt;/p&gt;

&lt;p&gt;避免这些, 需要找到症结, 并且制定计划.&lt;/p&gt;

&lt;p&gt;可以制定计划, 比如说, 去图书馆学习的时候, 把手机放进车里, 这样来避免分心 可以找一个安静的环境学习.&lt;/p&gt;

&lt;p&gt;计划很可能不是那么顺利地进行着, 可能经常需要调整计划, 本身很难一次性, 一步做到.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;the Reward&lt;/p&gt;

&lt;p&gt;习惯的养成需要愉悦感来维系. 拖延是因为这件事情很痛苦, 人容易把注意力转移到那些更容易愉快的事情上.&lt;/p&gt;

&lt;p&gt;但是优秀的习惯同样可以通过奖赏来获得, 只要能够找到奖励好学习习惯的正确方式.&lt;/p&gt;

&lt;p&gt;奖励可以是满足自己成就感的奖励: 一晚上看剧而不需要愧疚. 越是大的 achievement, 可以给予越大的 reward.&lt;/p&gt;

&lt;p&gt;而且长此以往, 事情做的越多, 自己也就越擅长, 也就更喜欢.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;the Belief&lt;/p&gt;

&lt;p&gt;需要相信自己的习惯是可以改变的, 更加有动力来行动.&lt;/p&gt;

&lt;p&gt;每次如果压力太大, 就会反弹, 反弹进入旧的行为模式.
这个时候就需要信念, 相信自己的新系统工作良好, 能够帮助自己.
最好能够有一块的伙伴, 同学, 相互鼓励.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;过程和结果&#34;&gt;过程和结果&lt;/h3&gt;

&lt;p&gt;避免拖延需要关注过程, 而不是执着于结果. &lt;strong&gt;过程&lt;/strong&gt; 意味着, 时间的流动、习惯养成和行动本身. 结果是最后呈现的结局.&lt;/p&gt;

&lt;p&gt;避免拖延, 就是不要关注结果. 注意力保持在关注于过程上,养成那些你需要做的那些不愉快的日常任务习惯.&lt;/p&gt;

&lt;p&gt;比如说, 还有五道题目没有完成, 关注结果, 会让你希望自己有一种魔法, 能够瞬间完成这 五 道题目. 这会让你痛苦, 逃避, 实际上你完成所有的五道题目需要上天或者上周的时间.&lt;/p&gt;

&lt;p&gt;最重要的是现在就着手去做, 慢慢推进, 开始做个番茄钟 25 分钟, 而不是直接一步完成它, 觉得自己牛逼闪闪.&lt;/p&gt;

&lt;h3 id=&#34;不要苛责自己&#34;&gt;不要苛责自己&lt;/h3&gt;

&lt;p&gt;当一个人开始工作的时候, 开始的时候, 会有不高兴的情绪, 这是很正常的, 即使是那些平时你喜欢的那些活动. 负面情绪不可怕, 关键是你自己怎么解释和处理这些情绪.&lt;/p&gt;

&lt;p&gt;调查发现非拖延者会把负面情绪放在一边, 然后对自己说「不要浪费时间了, 动手开干吧」一旦你开始做了, 一切都会变好.&lt;/p&gt;

&lt;p&gt;避免评判自己: 我是不是离目标更近了? 而是需要放松, 让自己进入心流.&lt;/p&gt;

&lt;p&gt;当烦心事, 骚扰的事情经过思维的时候, 只是让他流过就好了. 心流的被打扰也是不可避免的.&lt;/p&gt;

&lt;p&gt;你需要一个安静的地方, 或者一副降噪耳机.&lt;/p&gt;

&lt;h2 id=&#34;记忆&#34;&gt;记忆&lt;/h2&gt;

&lt;h3 id=&#34;关于记忆&#34;&gt;关于记忆&lt;/h3&gt;

&lt;p&gt;短期记忆就像电脑的 ROM 一样, 容易丢失; 而长期记忆像硬盘里的文件, 可以保存得更长久. 将短期记忆保存成长期记忆, 需要大量重复练习, 还可以借助一定技巧.&lt;/p&gt;

&lt;p&gt;长期记忆需要大量练习, 还需要长时间积累. 根据艾宾浩斯遗忘曲线, 重复的时间间隔可以逐渐加长, 比如在一个月中1, 3, 5, 10&amp;#x2026;天中记忆. 这一点软件 Anki 做得非常好&lt;/p&gt;

&lt;h3 id=&#34;联想记忆技巧&#34;&gt;联想记忆技巧&lt;/h3&gt;

&lt;p&gt;怎样使记忆群化, 而且更持久: 联想记忆&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;记四种植物: Garlic, Rose, Hawthorn, Musta, 首字母联系成  GRHM, 因为 GRAHAM 是一种饼干, 可以联想饼干的形状帮助记忆&lt;/li&gt;
&lt;li&gt;年份, 1965年, 可以记忆成亲戚的出生日&lt;/li&gt;
&lt;li&gt;数字: 11.0 记忆陈百米成绩&lt;/li&gt;
&lt;li&gt;数字: 18 刚刚成年的人, 想象数字是自己的年龄, 记忆如果自己是这样的感受&lt;/li&gt;
&lt;li&gt;医学上人体骨骼, 记忆顺口溜&lt;/li&gt;
&lt;li&gt;购物清单, 想象自己走在自己熟悉的场景中, 发生一系列关于需要记忆食物的 shocking stuff, 比如大瓶的牛奶在门口, 大块面包躺在沙发上, 鸡蛋在桌子上破碎&lt;/li&gt;
&lt;li&gt;其他 list 也可以使用类似的方法&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最初使用这种方法也许会慢, 但是记忆多了之后, 会快很多. 研究发现专业人士 expert 会用这种方法提高效率, 而且用得越多, 创造性越好&lt;/p&gt;

&lt;h2 id=&#34;其他tips&#34;&gt;其他tips&lt;/h2&gt;

&lt;h3 id=&#34;睡眠&#34;&gt;睡眠&lt;/h3&gt;

&lt;p&gt;远古人的睡觉是很危险的, 既然睡觉没有因为进化而消失, 一定非常重要. 至少有下面的作用:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;清理代谢废物&lt;/li&gt;
&lt;li&gt;清理不重要的记忆&lt;/li&gt;
&lt;li&gt;强化重要的记忆&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以如果需要强化记忆, 最好在睡觉之前看一看.&lt;/p&gt;

&lt;h3 id=&#34;interview-with-dr-terrence&#34;&gt;Interview with Dr.Terrence&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;不要总是反反复复地读书, 干中学(learn by doing).&lt;/li&gt;
&lt;li&gt;最好还有一群人有要学习的内容的氛围, 在潜移默化中吸收要学的内容.&lt;/li&gt;
&lt;li&gt;坚持运动, 帮助保持大脑的神经连接的活络&lt;/li&gt;
&lt;li&gt;还需要有耐心, 和持之以恒.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
